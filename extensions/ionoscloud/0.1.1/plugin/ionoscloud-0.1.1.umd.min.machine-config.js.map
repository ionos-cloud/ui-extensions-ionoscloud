{"version":3,"sources":["webpack://ionoscloud-0.1.1/./machine-config/ionoscloud.vue?f711","webpack://ionoscloud-0.1.1/./components/FileSelector.vue?d239","webpack://ionoscloud-0.1.1/components/FileSelector.vue","webpack://ionoscloud-0.1.1/./components/FileSelector.vue?ca77","webpack://ionoscloud-0.1.1/./components/FileSelector.vue","webpack://ionoscloud-0.1.1/machine-config/ionoscloud.vue","webpack://ionoscloud-0.1.1/./machine-config/ionoscloud.vue?0c2d","webpack://ionoscloud-0.1.1/./machine-config/ionoscloud.vue","webpack://ionoscloud-0.1.1/./machine-config/ionoscloud.vue?d511","webpack://ionoscloud-0.1.1/./machine-config/ionoscloud.vue?026c","webpack://ionoscloud-0.1.1/./machine-config/ionoscloud.vue?6b63","webpack://ionoscloud-0.1.1/./.shell/assets/brand sync ^\\.\\/.*\\/metadata\\.json$"],"names":["render","_vm","this","_h","$createElement","_c","_self","$fetchState","attrs","_e","errors","_l","err","idx","key","stringify","_m","staticClass","location","options","busy","model","value","callback","$$v","$set","expression","serverType","selected","serverAvailabilityZone","volumeAvailabilityZone","template","cpuFamily","mode","cores","ram","_v","diskSize","diskType","image","imagePassword","on","$event","cloudInit","target","sshUser","sshInCloudInit","datacenterId","datacenterName","lanId","lanName","privateLan","nicDhcp","nicIps","onChangeNicIps","waitForIpChange","waitForIpChangeTimeout","natId","natName","createNat","natLansToGateways","onChangeNatLansToGateways","natPublicIps","onChangeNatPublicIps","natFlowlogs","onChangeNatFlowlogs","natRules","onChangeNatRules","natRuleName","natRuleType","natRuleProtocol","natRulePublicIp","natRuleSourceSubnet","natRuleTargetSubnet","natRuleTargetPortRangeStart","natRuleTargetPortRangeEnd","addNatRule","staticRenderFns","isView","disabled","selectFile","_s","label","ref","multiple","directory","fileChange","props","type","required","default","includeFileName","showGrowlError","byteLimit","readAsDataUrl","rawData","includeFile","computed","methods","file","data","title","error","root","getFileContents","reader","name","resolve","reject","component","initLocation","initialValue","select_options","selected_option","enabled","initServerType","initserverAvailabilityZone","initTemplate","initvolumeAvailabilityZone","initCpuFamily","initDiskType","initNatRuleProtocol","validateIp","ip","validateSubnet","subnet","components","Banner","FileSelector","Loading","Checkbox","StringList","LabeledInput","LabeledSelect","TextArea","LabeledTooltip","mixins","uuid","cluster","credentialId","provider","authenticating","ready","os","password","havePassword","watch","initForViewMode","fakeSelectOptions","list","alert","checkNatRule","onPrivateKeyFileSelected","formatNatLansToGateways","aux","formatedValues","getNatLansToGateways","spl","arr","syncValue","test","content","__esModule","module","i","locals","exports","add","___CSS_LOADER_API_IMPORT___","push","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object"],"mappings":"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AEA,CACA4D,oBACA5D,OAAA,oCAEA,CACA4D,2BACA5D,OAAA,2CAEA,CACA4D,wBACA5D,OAAA,wCAEA,CACA4D,mBACA5D,OAAA,mCAEA,CACA4D,uBACA5D,OAAA,uCAEA,CACA4D,sBACA5D,OAAA,uCAGA,aAQA,OANA0F,cACA,mBACAC,aAIA,CACA9F,UACAS,WACAR,QACA8F,YAIA,SAASC,EAAeJ,GACxB,OACA,CACA7B,mBACA5D,OAAA,uCAEA,CACA4D,aACA5D,OAAA,4BAGA,aAQA,OANA0F,cACA,mBACAC,aAIA,CACA9F,UACAS,WACAR,QACA8F,YAIA,SAASE,EAA2BL,GACpC,OACA,CACA7B,aACA5D,OAAA,2BAEA,CACA4D,eACA5D,OAAA,+BAEA,CACA4D,eACA5D,OAAA,gCAGA,aAQA,OANA0F,cACA,mBACAC,aAIA,CACA9F,UACAS,WACAR,QACA8F,YAIA,SAASG,EAAaN,GACtB,OACA,CACA7B,WACA5D,OAAA,6BAEA,CACA4D,UACA5D,OAAA,2BAEA,CACA4D,UACA5D,OAAA,2BAEA,CACA4D,UACA5D,OAAA,2BAEA,CACA4D,WACA5D,OAAA,6BAEA,CACA4D,YACA5D,OAAA,+BAEA,CACA4D,YACA5D,OAAA,+BAEA,CACA4D,YACA5D,OAAA,gCAGA,aAQA,OANA0F,cACA,mBACAC,aAIA,CACA9F,UACAS,WACAR,QACA8F,YAIA,SAASI,EAA2BP,GACpC,OACA,CACA7B,aACA5D,OAAA,2BAEA,CACA4D,eACA5D,OAAA,+BAEA,CACA4D,eACA5D,OAAA,+BAEA,CACA4D,eACA5D,OAAA,gCAGA,aAQA,OANA0F,cACA,mBACAC,aAIA,CACA9F,UACAS,WACAR,QACA8F,YAIA,SAASK,EAAcR,GACvB,OACA,CACA7B,yBACA5D,OAAA,6CAEA,CACA4D,+BACA5D,OAAA,sDAEA,CACA4D,0BACA5D,OAAA,gDAGA,aAQA,OANA0F,cACA,mBACAC,aAIA,CACA9F,UACAS,WACAR,QACA8F,YAIA,SAASM,EAAaT,GACtB,OACA,CACA7B,YACA5D,OAAA,yBAEA,CACA4D,YACA5D,OAAA,0BAGA,aAQA,OANA0F,cACA,mBACAC,aAIA,CACA9F,UACAS,WACAR,QACA8F,YAIA,SAASO,IACT,OACA,CACAvC,YACA5D,OAAA,yBAEA,CACA4D,YACA5D,OAAA,yBAEA,CACA4D,YACA5D,OAAA,yBAEA,CACA4D,aACA5D,OAAA,4BAIA,OACAH,UACAS,oBACAR,QACA8F,YAIA,SAASQ,EAAWC,GACpB,mLAMA,SAASC,EAAeC,GACxB,mBACA,2DAIe,OACfC,YACAC,cACAC,eACAC,eACAC,gBACAC,kBACAC,oBACAC,qBACAC,uBACAC,oCAGAC,gBAEAjD,OACAkD,MACAjD,YACAC,aAGAiD,SACAlD,YACAE,kBAGAiD,cACAnD,YACAC,aAGAV,UACAS,aACAE,YAGAtE,MACAoE,aACAE,YAGAkD,UACApD,YACAC,cAIA,cACA,eACA,oBAIA,mBAMA,mCALA,yBAQAW,OAAA,kEACA,SACA,2BACA,2BACA,2BACA,6BACA,6BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,iCACA,iCACA,+BACA,+BACA,iCACA,iCACA,iCACA,wBAEA,OACAyC,kBACAC,SACAC,QACAC,cACAC,gBACA/H,4EACAS,oFACAI,8EACAF,sGACAC,sGACAE,kFACAM,yEACAJ,8DACAC,6DACAE,qEACAE,yEACAC,uEACAG,+DACAE,qEACAC,+EACAC,qEACAC,yGACAC,uDACAC,mFACAC,uEACAC,iEACAC,+DACAE,iFACAC,kGACAC,uDACAC,mFACAC,qEACAC,8GACAI,yEACAF,2EACAI,yFACAE,eACAC,mBACAC,oBACAE,uBACAD,mBACAE,uBACAC,+BACAC,6BACAjE,cAIAwI,OACA,eACA,gBAIAhD,SACAnF,iBAEAoI,kBAAA,gBACA,0FACA,8FACA,sHACA,sHACA,4FACA,2FAGAC,uBACAC,UACAA,aACAA,aAEA,GACAA,gBACAnE,QACA5D,UAIA+H,cAGA/F,kBACA,eACA,SAEA,YADAgG,iCAKA,eAGAvF,wBACA,eACA,SAEA,YADAuF,iCAKA,qBAGAzF,6BAEA,gBACA,mBACA,eAEA,YADAyF,yEAGA,WACA,6BAEA,YADAA,qCAIA,WACA,SAEA,YADAA,iCAKA,iCAEArF,uBAEA,gBACA,mBACA,eAEA,YADAqF,6FAGA,WACA,8CAEA,YADAA,+EAIA,WACA,qDAEA,YADAA,yFAKA,2BAGAC,gBACA,mBACA,oBACAD,wKAEA,GAEA,wBAIA,0CAIA,gBACAA,qCACA,GAEA,gBACAA,yCACA,GAEA,gBACAA,yCACA,GAEA,yDACAA,uCACA,KAEA,2DACAA,uCACA,IArBAA,wFACA,IALAA,+DACA,IA8BAnF,oBACA,eACA,yBACA,SAGA,wBAGAS,aACA,OACA,oHACA,0FACA,UACA,0BACA0E,kCAGA,sBACA,uBAIAE,4BACA,0BACA,2BAIA,gCAEA,oCAIAC,0BACA,SACA,qCACA,mBACA,OAAA9B,OAEA,oBAGA+B,aAFAA,SAMA,SACA,eACAC,iCAGA,oBAGAC,wBACA,MACA,OAGA,IAAAC,EAAA,KAEA,2BACAA,eACA,6BACAC,uBAIA,UAGAC,YAAA,kBAIA,iFACA,qFACA,6GACA,iFACA,6GACA,mFACA,iFACA,4BACA,wBACA,kCACA,4BACA,4CACA,oCACA,gCACA,8CACA,0CACA,8CACA,4BACA,gCACA,sCACA,gCACA,8BACA,gDACA,8DACA,4BACA,gCACA,oCACA,4DACA,wCACA,0CACA,kCACA,mCAGAC,OACA,oBCvrBiY,ICQ7X,G,UAAY,eACd,EACAhK,EACA6E,GACA,EACA,KACA,WACA,OAIa,e,6CCnBf,W,uBCGA,IAAIoF,EAAU,EAAQ,QACnBA,EAAQC,aAAYD,EAAUA,EAAQvE,SACnB,kBAAZuE,IAAsBA,EAAU,CAAC,CAACE,EAAOC,EAAIH,EAAS,MAC7DA,EAAQI,SAAQF,EAAOG,QAAUL,EAAQI,QAE5C,IAAIE,EAAM,EAAQ,QAAkE7E,QACvE6E,EAAI,WAAYN,GAAS,EAAM,CAAC,WAAY,EAAM,YAAa,K,qBCR5E,IAAIO,EAA8B,EAAQ,QAC1CF,EAAUE,GAA4B,GAEtCF,EAAQG,KAAK,CAACN,EAAOC,EAAI,8tCAAiuC,KAE1vCD,EAAOG,QAAUA,G,qBCNjB,IAAII,EAAM,CACT,sBAAuB,OACvB,0BAA2B,OAC3B,sBAAuB,OACvB,uBAAwB,QAIzB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAehE,QAAUmE,EACzBX,EAAOG,QAAUK,EACjBA,EAAeE,GAAK","file":"ionoscloud-0.1.1.umd.min.machine-config.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.$fetchState.pending)?_c('Loading',{attrs:{\"delayed\":true}}):_vm._e(),(_vm.errors.length)?_c('div',_vm._l((_vm.errors),function(err,idx){return _c('div',{key:idx},[_c('Banner',{attrs:{\"color\":\"error\",\"label\":_vm.stringify(err)}})],1)}),0):_vm._e(),_c('div',[_vm._m(0),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"Location\",\"options\":_vm.location.options,\"loading\":_vm.location.busy,\"searchable\":false},model:{value:(_vm.location.selected),callback:function ($$v) {_vm.$set(_vm.location, \"selected\", $$v)},expression:\"location.selected\"}})],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"ServerType\",\"options\":_vm.serverType.options,\"loading\":_vm.serverType.busy,\"searchable\":false},model:{value:(_vm.serverType.selected),callback:function ($$v) {_vm.$set(_vm.serverType, \"selected\", $$v)},expression:\"serverType.selected\"}})],1),(_vm.serverType.selected.value === 'ENTERPRISE')?_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"serverAvailabilityZone\",\"options\":_vm.serverAvailabilityZone.options,\"loading\":_vm.serverAvailabilityZone.busy,\"searchable\":false},model:{value:(_vm.serverAvailabilityZone.selected),callback:function ($$v) {_vm.$set(_vm.serverAvailabilityZone, \"selected\", $$v)},expression:\"serverAvailabilityZone.selected\"}})],1):_vm._e(),(_vm.serverType.selected.value === 'ENTERPRISE')?_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"volumeAvailabilityZone\",\"options\":_vm.volumeAvailabilityZone.options,\"loading\":_vm.volumeAvailabilityZone.busy,\"searchable\":false},model:{value:(_vm.volumeAvailabilityZone.selected),callback:function ($$v) {_vm.$set(_vm.volumeAvailabilityZone, \"selected\", $$v)},expression:\"volumeAvailabilityZone.selected\"}})],1):_vm._e(),(_vm.serverType.selected.value === 'CUBE')?_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"CUBE Server Template\",\"options\":_vm.template.options,\"loading\":_vm.template.busy,\"searchable\":false},model:{value:(_vm.template.selected),callback:function ($$v) {_vm.$set(_vm.template, \"selected\", $$v)},expression:\"template.selected\"}})],1):_vm._e()]),(_vm.serverType.selected.value === 'ENTERPRISE')?_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"CpuFamily\",\"options\":_vm.cpuFamily.options,\"loading\":_vm.cpuFamily.busy,\"searchable\":false},model:{value:(_vm.cpuFamily.selected),callback:function ($$v) {_vm.$set(_vm.cpuFamily, \"selected\", $$v)},expression:\"cpuFamily.selected\"}})],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"required\":true,\"label\":\"CPU Core Count\"},model:{value:(_vm.cores),callback:function ($$v) {_vm.cores=$$v},expression:\"cores\"}})],1),_c('div',{staticClass:\"col span-6\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"required\":true,\"label\":\"RAM size (in MiB)\"},model:{value:(_vm.ram),callback:function ($$v) {_vm.ram=$$v},expression:\"ram\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Must be a multiple of 256\")])],1)]):_vm._e(),(_vm.serverType.selected.value === 'ENTERPRISE')?_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-6\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"required\":true,\"label\":\"Disk size (in GB)\"},model:{value:(_vm.diskSize),callback:function ($$v) {_vm.diskSize=$$v},expression:\"diskSize\"}})],1),_c('div',{staticClass:\"col span-6\"},[_c('LabeledSelect',{attrs:{\"label\":\"DiskType\",\"options\":_vm.diskType.options,\"loading\":_vm.diskType.busy,\"searchable\":false,\"required\":true},model:{value:(_vm.diskType.selected),callback:function ($$v) {_vm.$set(_vm.diskType, \"selected\", $$v)},expression:\"diskType.selected\"}})],1)]):_vm._e(),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-6\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"required\":true,\"label\":\"Image Alias or ID\"},model:{value:(_vm.image),callback:function ($$v) {_vm.image=$$v},expression:\"image\"}}),_vm._m(1)],1),_c('div',{staticClass:\"col span-6\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"required\":true,\"label\":\"Image Password\",\"type\":\"password\"},model:{value:(_vm.imagePassword),callback:function ($$v) {_vm.imagePassword=$$v},expression:\"imagePassword\"}})],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-12\"},[_c('label',{staticClass:\"acc-label\"},[_vm._v(\"Cloud init configuration.\")]),_c('TextArea',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy},on:{\"input\":function($event){_vm.cloudInit=$event.target.value;}},model:{value:(_vm.cloudInit),callback:function ($$v) {_vm.cloudInit=$$v},expression:\"cloudInit\"}}),_vm._m(2)],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"SSH User\"},model:{value:(_vm.sshUser),callback:function ($$v) {_vm.sshUser=$$v},expression:\"sshUser\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. User to connect to via SSH.\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('Checkbox',{attrs:{\"label\":\"Send SSH in user data.\",\"mode\":_vm.mode,\"disabled\":_vm.busy},model:{value:(_vm.sshInCloudInit),callback:function ($$v) {_vm.sshInCloudInit=$$v},expression:\"sshInCloudInit\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Should the driver only add the SSH info in the user data? (required for custom images).\")])],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"Datacenter ID\"},model:{value:(_vm.datacenterId),callback:function ($$v) {_vm.datacenterId=$$v},expression:\"datacenterId\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional, UUID-4 format. If you want to use an existing IONOS Datacenter to host this VM, you can provide its ID here.\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"Datacenter Name\"},model:{value:(_vm.datacenterName),callback:function ($$v) {_vm.datacenterName=$$v},expression:\"datacenterName\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. If you want to use an existing IONOS Datacenter to host this VM, you can change the name here. Please note that if the ID is set it will the prioritized.\")])],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"LAN ID\"},model:{value:(_vm.lanId),callback:function ($$v) {_vm.lanId=$$v},expression:\"lanId\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional, integer. The LAN the VM will attach to. If blank, a default LAN will be created. Overrides \\\"Private LAN\\\" setting.\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"LAN Name\"},model:{value:(_vm.lanName),callback:function ($$v) {_vm.lanName=$$v},expression:\"lanName\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. If you want to use an existing IONOS LAN, you can change the name here. Please note that if the ID is set it will the prioritized.\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('Checkbox',{attrs:{\"label\":\"Make Default LAN Private\",\"mode\":_vm.mode,\"disabled\":_vm.busy},model:{value:(_vm.privateLan),callback:function ($$v) {_vm.privateLan=$$v},expression:\"privateLan\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"If the default LAN does not exist, create a private LAN\")])],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('Checkbox',{attrs:{\"label\":\"NIC DHCP\",\"mode\":_vm.mode,\"disabled\":_vm.busy},model:{value:(_vm.nicDhcp),callback:function ($$v) {_vm.nicDhcp=$$v},expression:\"nicDhcp\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Set whether the created NIC should have dhcp set on or off\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('StringList',{attrs:{\"label\":\"NIC Ips\",\"items\":_vm.nicIps,\"mode\":_vm.mode,\"disabled\":_vm.busy},on:{\"change\":function($event){return _vm.onChangeNicIps($event)}},model:{value:(_vm.nicIps),callback:function ($$v) {_vm.nicIps=$$v},expression:\"nicIps\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. IPBlock reserved IPs. If not set, the driver will reserve an IPBlock automatically or let the API set a private IP if the LAN is private\")])],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('Checkbox',{attrs:{\"label\":\"Wait for NIC IP change\",\"mode\":_vm.mode,\"disabled\":_vm.busy},model:{value:(_vm.waitForIpChange),callback:function ($$v) {_vm.waitForIpChange=$$v},expression:\"waitForIpChange\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Should the driver wait for the NIC IP to be set by external sources?\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"Wait for IP change timeout\"},model:{value:(_vm.waitForIpChangeTimeout),callback:function ($$v) {_vm.waitForIpChangeTimeout=$$v},expression:\"waitForIpChangeTimeout\"}})],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway ID\"},model:{value:(_vm.natId),callback:function ($$v) {_vm.natId=$$v},expression:\"natId\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional, UUID-4 format. Use a preconfigured NAT Gateway. Datacenter ID and Private LAN required. Overrides NAT Config below\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Name\"},model:{value:(_vm.natName),callback:function ($$v) {_vm.natName=$$v},expression:\"natName\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. If the \\\"Create NAT\\\" checkbox is checked, will try creating a NAT with this name. If one already exists, will use the existing NAT.\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('Checkbox',{attrs:{\"label\":\"Create a configurable NAT\",\"mode\":_vm.mode,\"disabled\":_vm.busy},model:{value:(_vm.createNat),callback:function ($$v) {_vm.createNat=$$v},expression:\"createNat\"}}),_vm._m(3)],1)]),(_vm.createNat === true)?_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('StringList',{attrs:{\"label\":\"Custom NAT: map LANs to Gateway IPs\",\"items\":_vm.natLansToGateways,\"mode\":_vm.mode,\"disabled\":_vm.busy},on:{\"change\":function($event){return _vm.onChangeNatLansToGateways($event)}},model:{value:(_vm.natLansToGateways),callback:function ($$v) {_vm.natLansToGateways=$$v},expression:\"natLansToGateways\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. Maps Lan IDs to a specific Gateway IP. Gateway IP must be set manually as default route.\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('StringList',{attrs:{\"label\":\"Custom NAT: Public IPs\",\"items\":_vm.natPublicIps,\"mode\":_vm.mode,\"disabled\":_vm.busy},on:{\"change\":function($event){return _vm.onChangeNatPublicIps($event)}},model:{value:(_vm.natPublicIps),callback:function ($$v) {_vm.natPublicIps=$$v},expression:\"natPublicIps\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. IPBlock reserved IPs. If not set, the driver will reserve an IPBlock automatically\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('StringList',{attrs:{\"label\":\"Custom NAT: Flowlogs\",\"items\":_vm.natFlowlogs,\"mode\":_vm.mode,\"disabled\":_vm.busy},on:{\"change\":function($event){return _vm.onChangeNatFlowlogs($event)}},model:{value:(_vm.natFlowlogs),callback:function ($$v) {_vm.natFlowlogs=$$v},expression:\"natFlowlogs\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. NAT Flowlogs.\")])],1)]):_vm._e(),(_vm.createNat === true)?_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-6\"},[_c('StringList',{attrs:{\"label\":\"Custom NAT: Rules\",\"items\":_vm.natRules,\"mode\":_vm.mode,\"disabled\":_vm.busy},on:{\"change\":function($event){return _vm.onChangeNatRules($event)}},model:{value:(_vm.natRules),callback:function ($$v) {_vm.natRules=$$v},expression:\"natRules\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. NAT Rules. Use the form bellow to add a new NAT rule\")])],1)]):_vm._e(),(_vm.createNat)?_c('div',{staticClass:\"card-container create-nat\"},[_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Name\"},model:{value:(_vm.natRuleName),callback:function ($$v) {_vm.natRuleName=$$v},expression:\"natRuleName\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. The name of the new Nat Gateway Rule.\")])],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Type\"},model:{value:(_vm.natRuleType),callback:function ($$v) {_vm.natRuleType=$$v},expression:\"natRuleType\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. The type of the new Nat Gateway Rule.\")])],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"natRuleProtocol\",\"options\":_vm.natRuleProtocol.options,\"loading\":_vm.natRuleProtocol.busy,\"searchable\":false},model:{value:(_vm.natRuleProtocol.selected),callback:function ($$v) {_vm.$set(_vm.natRuleProtocol, \"selected\", $$v)},expression:\"natRuleProtocol.selected\"}})],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Public IP\"},model:{value:(_vm.natRulePublicIp),callback:function ($$v) {_vm.natRulePublicIp=$$v},expression:\"natRulePublicIp\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. The Public IP of the new Nat Gateway Rule, leave black and the driver will use the nat gateway IP.\")])],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Source Subnet\"},model:{value:(_vm.natRuleSourceSubnet),callback:function ($$v) {_vm.natRuleSourceSubnet=$$v},expression:\"natRuleSourceSubnet\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. The Source Subnet of the new Nat Gateway Rule, leave black and the driver will use the first ip on the nic with mask 24.\")])],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Target Subnet\"},model:{value:(_vm.natRuleTargetSubnet),callback:function ($$v) {_vm.natRuleTargetSubnet=$$v},expression:\"natRuleTargetSubnet\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. The Target Subnet of the new Nat Gateway Rule.\")])],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Port Range Start\"},model:{value:(_vm.natRuleTargetPortRangeStart),callback:function ($$v) {_vm.natRuleTargetPortRangeStart=$$v},expression:\"natRuleTargetPortRangeStart\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Integer. The Port Range Start of the new Nat Gateway Rule.\")])],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Port Range End\"},model:{value:(_vm.natRuleTargetPortRangeEnd),callback:function ($$v) {_vm.natRuleTargetPortRangeEnd=$$v},expression:\"natRuleTargetPortRangeEnd\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Integer. The Port Range End of the new Nat Gateway Rule.\")])],1)]),_c('div',{staticClass:\"mt-10\"},[_c('button',{on:{\"click\":function($event){return _vm.addNatRule()}}},[_vm._v(\" Add NAT Gateway Rule + \")])])]):_vm._e()])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ionoscloud-config\"},[_c('div',{staticClass:\"title\"},[_vm._v(\" ionoscloud Configuration \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"help-block\"},[_vm._v(\"You can use \"),_c('a',{attrs:{\"href\":\"https://docs.ionos.com/cli-ionosctl\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"ionosctl image list [-F name=operatingSystem]\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. \"),_c('a',{attrs:{\"href\":\"https://cloudinit.readthedocs.io/en/latest/topics/examples.html\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Cloud-init Documentation\")]),_vm._v(\".\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"help-block\"},[_vm._v(\"Requires private LAN. You can override settings of this NAT using the form below \"),_c('a',{attrs:{\"href\":\"#\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"See open ports here\")]),_vm._v(\". Must set gateway IP as default route via cloud config, default: 10.0.0.1\")])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (!_vm.isView)?_c('button',{staticClass:\"file-selector btn\",attrs:{\"disabled\":_vm.disabled,\"type\":\"button\"},on:{\"click\":_vm.selectFile}},[_c('span',[_vm._v(_vm._s(_vm.label))]),_c('input',{ref:\"uploader\",staticClass:\"hide\",attrs:{\"type\":\"file\",\"multiple\":_vm.multiple,\"webkitdirectory\":_vm.directory},on:{\"change\":_vm.fileChange}})]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { set } from '@shell/utils/object';\n\nexport function createOnSelected(field) {\n  return function(contents) {\n    set(this, field, contents);\n  };\n}\n\nexport default {\n  props: {\n    label: {\n      type:     String,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: _EDIT\n    },\n\n    disabled: {\n      type:    Boolean,\n      default: false,\n    },\n\n    includeFileName: {\n      type:    Boolean,\n      default: false,\n    },\n\n    showGrowlError: {\n      type:    Boolean,\n      default: true\n    },\n\n    multiple: {\n      type:    Boolean,\n      default: false\n    },\n\n    byteLimit: {\n      type:    Number,\n      default: 0\n    },\n\n    readAsDataUrl: {\n      type:    Boolean,\n      default: false\n    },\n\n    directory: {\n      type:    Boolean,\n      default: false\n    },\n\n    rawData: {\n      type:    Boolean,\n      default: false\n    },\n\n    includeFile: {\n      type:    Boolean,\n      default: false\n    },\n  },\n\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    }\n  },\n\n  methods: {\n    selectFile() {\n      // Clear the value so the user can reselect the same file again\n      this.$refs.uploader.value = null;\n      this.$refs.uploader.click();\n    },\n\n    async fileChange(event) {\n      const input = event.target;\n      const files = Array.from(input.files || []);\n\n      if (this.byteLimit) {\n        for (const file of files) {\n          if (file.size > this.byteLimit) {\n            this.$emit('error', `${ file.name } exceeds the file size limit of ${ this.byteLimit } bytes`);\n\n            return;\n          }\n        }\n      }\n\n      if (this.rawData) {\n        const unboxedContents = !this.multiple && files.length === 1 ? files[0] : files;\n\n        this.$emit('selected', unboxedContents);\n\n        return;\n      }\n\n      try {\n        const asyncFileContents = files.map(this.getFileContents);\n        const fileContents = await Promise.all(asyncFileContents);\n        const unboxedContents = !this.multiple && fileContents.length === 1 ? fileContents[0] : fileContents;\n\n        if (this.includeFile) {\n          return this.$emit('selected', {\n            file: !this.multiple && fileContents.length === 1 ? files[0] : files,\n            data: unboxedContents\n          });\n        }\n\n        this.$emit('selected', unboxedContents);\n      } catch (error) {\n        this.$emit('error', error);\n        if (this.showGrowlError) {\n          this.$store.dispatch('growl/fromError', { title: 'Error reading file', error }, { root: true });\n        }\n      }\n    },\n\n    getFileContents(file) {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.onload = (ev) => {\n          const value = ev.target.result;\n          const name = file.name;\n          const fileContents = this.includeFileName ? { value, name } : value;\n\n          resolve(fileContents);\n        };\n\n        reader.onerror = (err) => {\n          reject(err);\n        };\n        if (this.readAsDataUrl) {\n          reader.readAsDataURL(file);\n        } else {\n          reader.readAsText(file);\n        }\n      });\n    }\n  }\n};\n</script>\n\n<template>\n  <button\n    v-if=\"!isView\"\n    :disabled=\"disabled\"\n    type=\"button\"\n    class=\"file-selector btn\"\n    @click=\"selectFile\"\n  >\n    <span>{{ label }}</span>\n    <input\n      ref=\"uploader\"\n      type=\"file\"\n      class=\"hide\"\n      :multiple=\"multiple\"\n      :webkitdirectory=\"directory\"\n      @change=\"fileChange\"\n    >\n  </button>\n</template>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./FileSelector.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./FileSelector.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FileSelector.vue?vue&type=template&id=dbe4b004&\"\nimport script from \"./FileSelector.vue?vue&type=script&lang=js&\"\nexport * from \"./FileSelector.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\nimport Loading from '@shell/components/Loading';\nimport { Banner } from '@components/Banner';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { StringList } from '@components/StringList';\nimport { TextArea } from '@components/Form/TextArea';\nimport { stringify } from '@shell/utils/error';\nimport { _VIEW } from '@shell/config/query-params';\nimport FileSelector from '../components/FileSelector';\n\nimport { LabeledTooltip } from '@rancher/components';\n\nfunction initLocation(initialValue) {\n  let select_options = [\n    {\n      label: 'Las Vegas, USA',\n      value: {'value': 'us/las', 'name': 'Las Vegas, USA'}\n    },\n    {\n      label:'Newark, USA',\n      value: {'value': 'us/ewr', 'name':'Newark, USA'}\n    },\n    {\n      label: 'Frankfurt, Germany',\n      value: {'value': 'de/fra', 'name': 'Frankfurt, Germany'}\n    },\n    {\n      label: 'Berlin, Germany',\n      value: {'value': 'de/txl', 'name': 'Berlin, Germany'}\n    },\n    {\n      label: 'London, UK',\n      value: {'value': 'gb/lhr', 'name': 'London, UK'}\n    },\n    {\n      label: 'Logroño, Spain',\n      value: {'value': 'es/vit', 'name': 'Logroño, Spain'}\n    },\n    {\n      label: 'Paris, France',\n      value: {'value': 'fr/par', 'name': 'Paris, France'}\n    },\n  ]\n  let selected_option = select_options[0].value\n\n  select_options.forEach(element => {\n    if (element.value.value == initialValue) {\n      selected_option = element.value\n    }\n  }); \n  \n  return {\n    options: select_options,\n    selected: selected_option,\n    busy:     false,\n    enabled:  false,\n  };\n}\n\nfunction initServerType(initialValue) {\n  let select_options = [\n    {\n      label: 'Enterprise',\n      value: {'value': 'ENTERPRISE', 'name': 'Enterprise'}\n    },\n    {\n      label:'Cube',\n      value: {'value': 'CUBE', 'name':'Cube'}\n    },\n  ]\n  let selected_option = select_options[0].value\n\n  select_options.forEach(element => {\n    if (element.value.value == initialValue) {\n      selected_option = element.value\n    }\n  }); \n  \n  return {\n    options: select_options,\n    selected: selected_option,\n    busy:     false,\n    enabled:  false,\n  };\n}\n\nfunction initserverAvailabilityZone(initialValue) {\n  let select_options = [\n    {\n      label: 'AUTO',\n      value: {'value': 'AUTO', 'name': 'AUTO'}\n    },\n    {\n      label:'ZONE_1',\n      value: {'value': 'ZONE_1', 'name':'ZONE_1'}\n    },\n    {\n      label:'ZONE_2',\n      value: {'value': 'ZONE_2', 'name':'ZONE_2'}\n    },\n  ]\n  let selected_option = select_options[0].value\n\n  select_options.forEach(element => {\n    if (element.value.value == initialValue) {\n      selected_option = element.value\n    }\n  }); \n  \n  return {\n    options: select_options,\n    selected: selected_option,\n    busy:     false,\n    enabled:  false,\n  };\n}\n\nfunction initTemplate(initialValue) {\n  let select_options = [\n    {\n      label: 'XS',\n      value: {'value': 'CUBES XS', 'name': 'XS'}\n    },\n    {\n      label: 'S',\n      value: {'value': 'CUBES S', 'name': 'S'}\n    },\n    {\n      label: 'M',\n      value: {'value': 'CUBES M', 'name': 'M'}\n    },\n    {\n      label: 'L',\n      value: {'value': 'CUBES L', 'name': 'L'}\n    },\n    {\n      label: 'XL',\n      value: {'value': 'CUBES XL', 'name': 'XL'}\n    },\n    {\n      label: 'XXL',\n      value: {'value': 'CUBES XXL', 'name': 'XXL'}\n    },\n    {\n      label: '3XL',\n      value: {'value': 'CUBES 3XL', 'name': '3XL'}\n    },\n    {\n      label: '4XL',\n      value: {'value': 'CUBES 4XL', 'name': '4XL'}\n    },\n  ]\n  let selected_option = select_options[0].value\n\n  select_options.forEach(element => {\n    if (element.value.value == initialValue) {\n      selected_option = element.value\n    }\n  }); \n  \n  return {\n    options: select_options,\n    selected: selected_option,\n    busy:     false,\n    enabled:  false,\n  };\n}\n\nfunction initvolumeAvailabilityZone(initialValue) {\n  let select_options = [\n    {\n      label: 'AUTO',\n      value: {'value': 'AUTO', 'name': 'AUTO'}\n    },\n    {\n      label:'ZONE_1',\n      value: {'value': 'ZONE_1', 'name':'ZONE_1'}\n    },\n    {\n      label:'ZONE_2',\n      value: {'value': 'ZONE_2', 'name':'ZONE_2'}\n    },\n    {\n      label:'ZONE_3',\n      value: {'value': 'ZONE_3', 'name':'ZONE_3'}\n    },\n  ]\n  let selected_option = select_options[0].value\n\n  select_options.forEach(element => {\n    if (element.value.value == initialValue) {\n      selected_option = element.value\n    }\n  }); \n  \n  return {\n    options: select_options,\n    selected: selected_option,\n    busy:     false,\n    enabled:  false,\n  };\n}\n\nfunction initCpuFamily(initialValue) {\n  let select_options = [\n    {\n      label: 'Intel XEON (USA)',\n      value: {'value': 'INTEL_XEON', 'name': 'Intel XEON (USA)'}\n    },\n    {\n      label: 'Intel SKYLAKE (Europe)',\n      value: {'value': 'INTEL_SKYLAKE', 'name': 'Intel SKYLAKE (Europe)'}\n    },\n    {\n      label: 'AMD OPTERON (USA)',\n      value: {'value': 'AMD_OPTERON', 'name': 'AMD OPTERON (USA)'}\n    },\n  ]\n  let selected_option = select_options[0].value\n\n  select_options.forEach(element => {\n    if (element.value.value == initialValue) {\n      selected_option = element.value\n    }\n  }); \n  \n  return {\n    options: select_options,\n    selected: selected_option,\n    busy:     false,\n    enabled:  false,\n  };\n}\n\nfunction initDiskType(initialValue) {\n  let select_options = [\n    {\n      label: 'HDD',\n      value: {'value': 'HDD', 'name': 'HDD'}\n    },\n    {\n      label: 'SSD',\n      value: {'value': 'SSD', 'name': 'SSD'}\n    },\n  ]\n  let selected_option = select_options[0].value\n\n  select_options.forEach(element => {\n    if (element.value.value == initialValue) {\n      selected_option = element.value\n    }\n  }); \n  \n  return {\n    options: select_options,\n    selected: selected_option,\n    busy:     false,\n    enabled:  false,\n  };\n}\n\nfunction initNatRuleProtocol() {\n  let select_options = [\n    {\n      label: 'ALL',\n      value: {'value': 'ALL', 'name': 'ALL'}\n    },\n    {\n      label: 'TCP',\n      value: {'value': 'TCP', 'name': 'TCP'}\n    },\n    {\n      label: 'UDP',\n      value: {'value': 'UDP', 'name': 'UDP'}\n    },\n    {\n      label: 'ICMP',\n      value: {'value': 'ICMP', 'name': 'ICMP'}\n    },\n  ]\n  \n  return {\n    options: select_options,\n    selected: select_options[0].value,\n    busy:     false,\n    enabled:  false,\n  };\n}\n\nfunction validateIp(ip) {\n  if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ip)) {\n    return true;\n  }\n  return false;\n}\n\nfunction validateSubnet(subnet) {\n  let splitSubnet = subnet.split('/')\n  return (splitSubnet.length == 2 && validateIp(splitSubnet[0]) && !(Number.isNaN(parseInt(splitSubnet[1]))))\n}\n\n\nexport default {\n  components: {\n    Banner,\n    FileSelector,\n    Loading,\n    Checkbox,\n    StringList,\n    LabeledInput,\n    LabeledSelect,\n    TextArea,\n    LabeledTooltip\n},\n\n  mixins: [CreateEditView],\n\n  props: {\n    uuid: {\n      type:     String,\n      required: true,\n    },\n\n    cluster: {\n      type:    Object,\n      default: () => ({})\n    },\n\n    credentialId: {\n      type:     String,\n      required: true,\n    },\n\n    disabled: {\n      type:    Boolean,\n      default: false\n    },\n\n    busy: {\n      type:    Boolean,\n      default: false\n    },\n\n    provider: {\n      type:     String,\n      required: true,\n    }\n  },\n\n  async fetch() {\n    this.errors = [];\n    if ( !this.credentialId ) {\n      return;\n    }\n\n    if (this.mode === _VIEW) {\n      this.initForViewMode();\n\n      return;\n    }\n\n    this.$emit('validationChanged', true);\n  },\n\n  data() {\n    const defaultNatRules = [\n      'rule01:SNAT:TCP::::22:22',\n      'rule02:SNAT:UDP::::53:53',\n      'rule03:SNAT:TCP::::80:80',\n      'rule04:SNAT:TCP::::179:179',\n      'rule05:SNAT:TCP::::443:443',\n      'rule06:SNAT:TCP::::2376:2376',\n      'rule07:SNAT:UDP::::4789:4789',\n      'rule08:SNAT:TCP::::6443:6443',\n      'rule09:SNAT:TCP::::6783:6783',\n      'rule10:SNAT:TCP::::8443:8443',\n      'rule11:SNAT:UDP::::8472:8472',\n      'rule12:SNAT:TCP::::9099:9099',\n      'rule13:SNAT:TCP::::9100:9100',\n      'rule14:SNAT:TCP::::9443:9443',\n      'rule15:SNAT:TCP::::9796:9796',\n      'rule16:SNAT:TCP::::10254:10254',\n      'rule17:SNAT:TCP::::10256:10256',\n      'rule18:SNAT:TCP::::2379:2380',\n      'rule19:SNAT:UDP::::6783:6784',\n      'rule20:SNAT:TCP::::10250:10252',\n      'rule21:SNAT:TCP::::30000:32767',\n      'rule22:SNAT:UDP::::30000:32767',\n      'rule23:SNAT:ALL:::::',\n    ]\n    return {\n      authenticating:              false,\n      ready:                       false,\n      os:                          null,\n      password:                    null,\n      havePassword:                false,\n      location:                    initLocation(this.value?.location || 'us/las'),\n      serverType:                  initServerType(this.value?.serverType || 'ENTERPRISE'),\n      template:                    initTemplate(this.value?.template || 'CUBES XS'),\n      serverAvailabilityZone:      initserverAvailabilityZone(this.value?.serverAvailabilityZone || 'AUTO'),\n      volumeAvailabilityZone:      initvolumeAvailabilityZone(this.value?.volumeAvailabilityZone || 'AUTO'),\n      cpuFamily:                   initCpuFamily(this.value?.cpuFamily || 'INTEL_XEON'),\n      diskType:                    initDiskType(this.value?.diskType || 'HDD'),\n      cores:                       this.value?.cores || '2',\n      ram:                         this.value?.ram || '2048',\n      diskSize:                    this.value?.diskSize || '50',\n      image:                       this.value?.image || 'ubuntu:20.04',\n      imagePassword:               this.value?.imagePassword,\n      cloudInit:                   this.value?.cloudInit,\n      sshUser:                     this.value?.sshUser || 'root',\n      sshInCloudInit:              this.value?.sshInCloudInit || false,\n      datacenterId:                this.value?.datacenterId,\n      datacenterName:              this.value?.datacenterName || 'docker-machine-data-center',\n      lanId:                       this.value?.lanId,\n      lanName:                     this.value?.lanName || 'docker-machine-lan',\n      privateLan:                  this.value?.privateLan || false,\n      nicDhcp:                     this.value?.nicDhcp || false,\n      nicIps:                      this.value?.nicIps || [],\n      waitForIpChange:             this.value?.waitForIpChange || false,\n      waitForIpChangeTimeout:      this.value?.waitForIpChangeTimeout || '600',\n      natId:                       this.value?.natId,\n      natName:                     this.value?.natName || 'docker-machine-nat',\n      createNat:                   this.value?.createNat || false,\n      natLansToGateways:           this.getNatLansToGateways(this.value?.natLansToGateways) || [],\n      natFlowlogs:                 this.value?.natFlowlogs || [],\n      natPublicIps:                this.value?.natPublicIps || [],\n      natRules:                    this.mode == 'create' ? defaultNatRules : this.value?.natRules || [],\n      natRuleName:                 '',\n      natRuleType:                 'SNAT',\n      natRuleProtocol:             initNatRuleProtocol(),\n      natRuleSourceSubnet:         '',\n      natRulePublicIp:             '',\n      natRuleTargetSubnet:         '',\n      natRuleTargetPortRangeStart: '',\n      natRuleTargetPortRangeEnd:   '',\n      errors:                      null,\n    };\n  },\n\n  watch: {\n    'credentialId'() {\n      this.$fetch();\n    },\n  },\n\n  methods: {\n    stringify,\n\n    initForViewMode() {\n      this.fakeSelectOptions(this.Location, this.value?.location);\n      this.fakeSelectOptions(this.ServerType, this.value?.serverType);\n      this.fakeSelectOptions(this.serverAvailabilityZone, this.value?.serverAvailabilityZone);\n      this.fakeSelectOptions(this.volumeAvailabilityZone, this.value?.volumeAvailabilityZone);\n      this.fakeSelectOptions(this.CpuFamily, this.value?.cpuFamily);\n      this.fakeSelectOptions(this.DiskType, this.value?.diskType);\n    },\n\n    fakeSelectOptions(list, value) {\n      list.busy = false;\n      list.enabled = false;\n      list.options = [];\n\n      if (value) {\n        list.options.push({\n          label: value,\n          value,\n        });\n      }\n\n      list.selected = value;\n    },\n\n    onChangeNicIps(event) {\n      for (let ip of event) {\n        if (!validateIp(ip)) {\n          alert(\"Invalid IP detected: \" + ip );\n          return;\n        }\n      }\n\n      this.nicIps = event;\n    },\n\n    onChangeNatPublicIps(event) {\n      for (let ip of event) {\n        if (!validateIp(ip)) {\n          alert(\"Invalid IP detected: \" + ip );\n          return;\n        }\n      }\n\n      this.natPublicIps = event;\n    },\n\n    onChangeNatLansToGateways(event) {\n\n      for (let el of event) {\n        let spl = el.split(':')\n        if (spl.length != 2) {\n          alert(\"Invalid entry detected: \" + el + \". The accepted format is LanId:IP!\");\n          return;\n        }\n        let lanId = spl[0]\n        if (Number.isNaN(parseInt(lanId))) {\n          alert(\"Invalid LAN ID detected: \" + lanId );\n          return;\n        }\n\n        let ip = spl[1]\n        if (!validateIp(ip)) {\n          alert(\"Invalid IP detected: \" + ip );\n          return;\n        }\n      }\n\n      this.natLansToGateways = event.sort();\n    },\n    onChangeNatFlowlogs(event) {\n\n      for (let el of event) {\n        let spl = el.split(':')\n        if (spl.length != 4) {\n          alert(\"Invalid entry detected: \" + el + \". The accepted format is name:action:direction:bucket!\");\n          return;\n        }\n        let action = spl[1]\n        if (![\"ACCEPTED\", \"REJECTED\", \"ALL\"].includes(action)) {\n          alert(\"Invalid action: \" + action + \". Must be one of ['ACCEPTED', 'REJECTED', 'ALL']\");\n          return;\n        }\n\n        let direction = spl[2]\n        if (![\"INGRESS\", \"EGRESS\", \"BIDIRECTIONAL\"].includes(direction)) {\n          alert(\"Invalid direction: \" + direction + \". Must be one of ['INGRESS', 'EGRESS', 'BIDIRECTIONAL']\");\n          return;\n        }\n      }\n\n      this.natFlowlogs = event.sort();\n    },\n\n    checkNatRule(rule) {\n      let splitRule = rule.split(':') \n      if (splitRule.length != 8) {\n        alert(\"Invalid entry detected: \" + rule + \". The accepted format is \" +\n        \"name:type:protocol:public_ip:source_subnet:target_subnet:target_port_range_start:target_port_range_end!\");\n        return false;\n      }\n      if (!['SNAT'].includes(splitRule[1])) {\n        alert(\"Invalid rule type: \" + splitRule[1] + \". Must be one of ['SNAT']\");\n        return false;\n      }\n      if (!['TCP', 'UDP', 'ICMP', 'ALL'].includes(splitRule[2])) {\n        alert(\"Invalid rule protocol: \" + splitRule[2] + \". Must be one of ['TCP', 'UDP', 'ICMP', 'ALL']\");\n        return false;\n      }\n      if (splitRule[3] && !validateIp(splitRule[3])) {\n        alert(\"Invalid IP detected: \" + splitRule[3] );\n        return false;\n      }\n      if (splitRule[4] && !validateSubnet(splitRule[4])) {\n        alert(\"Invalid Subnet detected: \" + splitRule[4] );\n        return false;\n      }\n      if (splitRule[5] && !validateSubnet(splitRule[5])) {\n        alert(\"Invalid Subnet detected: \" + splitRule[5] );\n        return false;\n      }\n      if (splitRule[6] && (!Number.isInteger(Number(splitRule[6])) || Number(splitRule[6]) < 0)) {\n        alert(\"Invalid Port detected: \" + splitRule[6] );\n        return false;\n      }\n      if (splitRule[7] && (!Number.isInteger(Number(splitRule[7])) || Number(splitRule[7]) < 0)) {\n        alert(\"Invalid Port detected: \" + splitRule[7] );\n        return false;\n      }\n\n      return true\n    },\n\n    onChangeNatRules(event) {\n      for (let rule of event) {\n        if (!this.checkNatRule(rule)) {\n          return false;\n        }\n      }\n      this.natRules = event.sort();\n    },\n\n    addNatRule() {\n      let rule = [\n        this.natRuleName, this.natRuleType, this.natRuleProtocol.selected.value, this.natRulePublicIp, this.natRuleSourceSubnet,\n        this.natRuleTargetSubnet, this.natRuleTargetPortRangeStart, this.natRuleTargetPortRangeEnd\n      ].join(':')\n      if (this.natRules.includes(rule)) {\n        alert(\"Rule is already in list!\");\n        return;\n      }\n      if (this.checkNatRule(rule)) {\n        this.natRules.push(rule)\n      }\n    },\n\n    onPrivateKeyFileSelected(v) {\n      this.filename = v.file.name;\n      this.privateKeyFile = v.data;\n\n      // On initial load, filename is shown as a password as we don't know what the filename was that was used - we just want to indicate there is a vlue\n      // When a file is chosen, change the type to text, so that the user can see the filename of the file that they chose\n      this.privateKeyFieldType = 'text';\n\n      this.$emit('validationChanged', true);\n    },\n\n    // Sets `value.natLansToGateways` to a map of LANs to Gateways interpretable by Docker Machine Driver: like 1=10.0.0.1,10.0.0.2:2=10.0.0.10\n    formatNatLansToGateways() {\n      let aux = {}\n      for (let el of this.natLansToGateways) {\n        let spl = el.split(':')\n        let lanId = spl[0], ip = spl[1]\n\n        if (!aux.hasOwnProperty(lanId)) {\n          aux[lanId] = [ip]\n        } else {\n          aux[lanId].push(ip)\n        }\n      }\n\n      let formatedValues = []\n      for (let lanId in aux) {\n        formatedValues.push(`${lanId}=${aux[lanId].join(',')}`)\n      }\n\n      return formatedValues.join(':')\n    },\n\n    getNatLansToGateways(stringValue) {\n      if (!stringValue) {\n        return undefined\n      }\n\n      let arr = [], spl\n\n      for (let el of stringValue.split(':')) {\n        spl = el.split('=')\n        for (let ip of spl[1].split(',')) {\n          arr.push(`${spl[0]}:${ip}`)\n        }\n      }\n\n      return arr\n    },\n\n    syncValue() {\n      // Note: We don't need to provide password as this is picked up via the credential\n\n      // Copy the values from the form to the correct places on the value\n      this.value.location = this.location.selected?.value;\n      this.value.serverType = this.serverType.selected?.value;\n      this.value.serverAvailabilityZone = this.serverAvailabilityZone.selected?.value;\n      this.value.template = this.template.selected?.value;\n      this.value.volumeAvailabilityZone = this.volumeAvailabilityZone.selected?.value;\n      this.value.cpuFamily = this.cpuFamily.selected?.value;\n      this.value.diskType = this.diskType.selected?.value;\n      this.value.cores = this.cores;\n      this.value.ram = this.ram;\n      this.value.diskSize = this.diskSize;\n      this.value.image = this.image;\n      this.value.imagePassword = this.imagePassword;\n      this.value.cloudInit = this.cloudInit;\n      this.value.sshUser = this.sshUser;\n      this.value.sshInCloudInit = this.sshInCloudInit;\n      this.value.datacenterId = this.datacenterId;\n      this.value.datacenterName = this.datacenterName;\n      this.value.lanId = this.lanId;\n      this.value.lanName = this.lanName;\n      this.value.privateLan = this.privateLan;\n      this.value.nicDhcp = this.nicDhcp;\n      this.value.nicIps = this.nicIps;\n      this.value.waitForIpChange = this.waitForIpChange;\n      this.value.waitForIpChangeTimeout = this.waitForIpChangeTimeout;\n      this.value.natId = this.natId;\n      this.value.natName = this.natName;\n      this.value.createNat = this.createNat;\n      this.value.natLansToGateways = this.formatNatLansToGateways();\n      this.value.natFlowlogs = this.natFlowlogs;\n      this.value.natPublicIps = this.natPublicIps;\n      this.value.natRules = this.natRules;\n      this.value.skipDefaultNatRules = true;\n    },\n\n    test() {\n      this.syncValue();\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <Loading\n      v-if=\"$fetchState.pending\"\n      :delayed=\"true\"\n    />\n    <div v-if=\"errors.length\">\n      <div\n        v-for=\"(err, idx) in errors\"\n        :key=\"idx\"\n      >\n        <Banner\n          color=\"error\"\n          :label=\"stringify(err)\"\n        />\n      </div>\n    </div>\n    <div>\n      <div class=\"ionoscloud-config\">\n        <div class=\"title\">\n          ionoscloud Configuration\n        </div>\n      </div>\n      <div class=\"row mt-10\">\n        <div class=\"col span-3\">\n          <LabeledSelect\n            v-model=\"location.selected\"\n            label=\"Location\"\n            :options=\"location.options\"\n            :loading=\"location.busy\"\n            :searchable=\"false\"\n          />\n        </div>\n        <div class=\"col span-3\">\n          <LabeledSelect\n            v-model=\"serverType.selected\"\n            label=\"ServerType\"\n            :options=\"serverType.options\"\n            :loading=\"serverType.busy\"\n            :searchable=\"false\"\n          />\n        </div>\n        <div class=\"col span-3\" v-if=\"serverType.selected.value === 'ENTERPRISE'\">\n          <LabeledSelect\n            v-model=\"serverAvailabilityZone.selected\"\n            label=\"serverAvailabilityZone\"\n            :options=\"serverAvailabilityZone.options\"\n            :loading=\"serverAvailabilityZone.busy\"\n            :searchable=\"false\"\n          />\n        </div>\n        <div class=\"col span-3\" v-if=\"serverType.selected.value === 'ENTERPRISE'\">\n          <LabeledSelect\n            v-model=\"volumeAvailabilityZone.selected\"\n            label=\"volumeAvailabilityZone\"\n            :options=\"volumeAvailabilityZone.options\"\n            :loading=\"volumeAvailabilityZone.busy\"\n            :searchable=\"false\"\n          />\n        </div>\n        <div class=\"col span-3\" v-if=\"serverType.selected.value === 'CUBE'\">\n          <LabeledSelect\n            v-model=\"template.selected\"\n            label=\"CUBE Server Template\"\n            :options=\"template.options\"\n            :loading=\"template.busy\"\n            :searchable=\"false\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row mt-10\" v-if=\"serverType.selected.value === 'ENTERPRISE'\">\n        <div class=\"col span-3\">\n          <LabeledSelect\n            v-model=\"cpuFamily.selected\"\n            label=\"CpuFamily\"\n            :options=\"cpuFamily.options\"\n            :loading=\"cpuFamily.busy\"\n            :searchable=\"false\"\n          />\n        </div>\n        <div class=\"col span-3\">\n          <LabeledInput\n            v-model=\"cores\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            :required=\"true\"\n            label=\"CPU Core Count\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"ram\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            :required=\"true\"\n            label=\"RAM size (in MiB)\"\n          />\n          <p class=\"help-block\">Must be a multiple of 256</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\" v-if=\"serverType.selected.value === 'ENTERPRISE'\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"diskSize\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            :required=\"true\"\n            label=\"Disk size (in GB)\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledSelect\n            v-model=\"diskType.selected\"\n            label=\"DiskType\"\n            :options=\"diskType.options\"\n            :loading=\"diskType.busy\"\n            :searchable=\"false\"\n            :required=\"true\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"image\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            :required=\"true\"\n            label=\"Image Alias or ID\"\n          />\n          <p class=\"help-block\">You can use <a href=\"https://docs.ionos.com/cli-ionosctl\" target=\"_blank\" rel=\"noopener noreferrer\">ionosctl image list [-F name=operatingSystem]</a></p>\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"imagePassword\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            :required=\"true\"\n            label=\"Image Password\"\n            type=\"password\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-12\">\n          <label class=\"acc-label\">Cloud init configuration.</label>\n          <TextArea\n            v-model=\"cloudInit\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            @input=\"cloudInit=$event.target.value;\"\n          ></TextArea>\n          <p class=\"help-block\">Optional. <a href=\"https://cloudinit.readthedocs.io/en/latest/topics/examples.html\" target=\"_blank\" rel=\"noopener noreferrer\">Cloud-init Documentation</a>.</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"sshUser\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"SSH User\"\n          />\n          <p class=\"help-block\">Optional. User to connect to via SSH.</p>\n        </div>\n        <div class=\"col span-4\">\n          <Checkbox\n            label=\"Send SSH in user data.\"\n            v-model=\"sshInCloudInit\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n          />\n          <p class=\"help-block\">Should the driver only add the SSH info in the user data? (required for custom images).</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"datacenterId\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"Datacenter ID\"\n          />\n          <p class=\"help-block\">Optional, UUID-4 format. If you want to use an existing IONOS Datacenter to host this VM, you can provide its ID here.</p>\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"datacenterName\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"Datacenter Name\"\n          />\n          <p class=\"help-block\">String. If you want to use an existing IONOS Datacenter to host this VM, you can change the name here. Please note that if the ID is set it will the prioritized.</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"lanId\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"LAN ID\"\n          />\n          <p class=\"help-block\">Optional, integer. The LAN the VM will attach to. If blank, a default LAN will be created. Overrides \"Private LAN\" setting.</p>\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"lanName\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"LAN Name\"\n          />\n          <p class=\"help-block\">String. If you want to use an existing IONOS LAN, you can change the name here. Please note that if the ID is set it will the prioritized.</p>\n        </div>\n        <div class=\"col span-4\">\n          <Checkbox\n            label=\"Make Default LAN Private\"\n            v-model=\"privateLan\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n          />\n          <p class=\"help-block\">If the default LAN does not exist, create a private LAN</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-4\">\n          <Checkbox\n            label=\"NIC DHCP\"\n            v-model=\"nicDhcp\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n          />\n          <p class=\"help-block\">Set whether the created NIC should have dhcp set on or off</p>\n        </div>\n        <div class=\"col span-4\">\n          <StringList\n            label=\"NIC Ips\"\n            v-model=\"nicIps\"\n            :items=\"nicIps\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            @change=\"onChangeNicIps($event)\"\n          />\n          <p class=\"help-block\">Optional. IPBlock reserved IPs. If not set, the driver will reserve an IPBlock automatically or let the API set a private IP if the LAN is private</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-4\">\n          <Checkbox\n            label=\"Wait for NIC IP change\"\n            v-model=\"waitForIpChange\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n          />\n          <p class=\"help-block\">Should the driver wait for the NIC IP to be set by external sources?</p>\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"waitForIpChangeTimeout\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"Wait for IP change timeout\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"natId\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"IONOS Nat Gateway ID\"\n          />\n          <p class=\"help-block\">Optional, UUID-4 format. Use a preconfigured NAT Gateway. Datacenter ID and Private LAN required. Overrides NAT Config below</p>\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"natName\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"IONOS Nat Gateway Name\"\n          />\n          <p class=\"help-block\">String. If the \"Create NAT\" checkbox is checked, will try creating a NAT with this name. If one already exists, will use the existing NAT.</p>\n        </div>\n        <div class=\"col span-4\">\n          <Checkbox\n            label=\"Create a configurable NAT\"\n            v-model=\"createNat\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n          />\n          <p class=\"help-block\">Requires private LAN. You can override settings of this NAT using the form below <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">See open ports here</a>. Must set gateway IP as default route via cloud config, default: 10.0.0.1</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\" v-if=\"createNat === true\">\n        <div class=\"col span-4\">\n          <StringList\n            label=\"Custom NAT: map LANs to Gateway IPs\"\n            v-model=\"natLansToGateways\"\n            :items=\"natLansToGateways\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            @change=\"onChangeNatLansToGateways($event)\"\n          />\n          <p class=\"help-block\">Optional. Maps Lan IDs to a specific Gateway IP. Gateway IP must be set manually as default route.</p>\n        </div>\n        <div class=\"col span-4\">\n          <StringList\n            label=\"Custom NAT: Public IPs\"\n            v-model=\"natPublicIps\"\n            :items=\"natPublicIps\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            @change=\"onChangeNatPublicIps($event)\"\n          />\n          <p class=\"help-block\">Optional. IPBlock reserved IPs. If not set, the driver will reserve an IPBlock automatically</p>\n        </div>\n        <div class=\"col span-4\">\n          <StringList\n            label=\"Custom NAT: Flowlogs\"\n            v-model=\"natFlowlogs\"\n            :items=\"natFlowlogs\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            @change=\"onChangeNatFlowlogs($event)\"\n          />\n          <p class=\"help-block\">Optional. NAT Flowlogs.</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\" v-if=\"createNat === true\">\n        <div class=\"col span-6\">\n          <StringList\n            label=\"Custom NAT: Rules\"\n            v-model=\"natRules\"\n            :items=\"natRules\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            @change=\"onChangeNatRules($event)\"\n          />\n          <p class=\"help-block\">Optional. NAT Rules. Use the form bellow to add a new NAT rule</p>\n        </div>\n      </div>\n      <div class=\"card-container create-nat\" v-if=\"createNat\">\n        <div class=\"row mt-10\">\n          <div class=\"col span-3\">\n            <LabeledInput\n              v-model=\"natRuleName\"\n              :mode=\"mode\"\n              :disabled=\"busy\"\n              label=\"IONOS Nat Gateway Rule Name\"\n            />\n            <p class=\"help-block\">String. The name of the new Nat Gateway Rule.</p>\n          </div>\n          <div class=\"col span-3\">\n              <LabeledInput\n                v-model=\"natRuleType\"\n                :mode=\"mode\"\n                :disabled=\"busy\"\n                label=\"IONOS Nat Gateway Rule Type\"\n              />\n            <p class=\"help-block\">String. The type of the new Nat Gateway Rule.</p>\n          </div>\n          <div class=\"col span-3\">\n            <LabeledSelect\n              v-model=\"natRuleProtocol.selected\"\n              label=\"natRuleProtocol\"\n              :options=\"natRuleProtocol.options\"\n              :loading=\"natRuleProtocol.busy\"\n              :searchable=\"false\"\n            />\n          </div>\n          <div class=\"col span-3\">\n            <LabeledInput\n              v-model=\"natRulePublicIp\"\n              :mode=\"mode\"\n              :disabled=\"busy\"\n              label=\"IONOS Nat Gateway Rule Public IP\"\n            />\n            <p class=\"help-block\">String. The Public IP of the new Nat Gateway Rule, leave black and the driver will use the nat gateway IP.</p>\n          </div>\n        </div>\n        <div class=\"row mt-10\">\n          <div class=\"col span-3\">\n            <LabeledInput\n              v-model=\"natRuleSourceSubnet\"\n              :mode=\"mode\"\n              :disabled=\"busy\"\n              label=\"IONOS Nat Gateway Rule Source Subnet\"\n            />\n            <p class=\"help-block\">String. The Source Subnet of the new Nat Gateway Rule, leave black and the driver will use the first ip on the nic with mask 24.</p>\n          </div>\n          <div class=\"col span-3\">\n            <LabeledInput\n              v-model=\"natRuleTargetSubnet\"\n              :mode=\"mode\"\n              :disabled=\"busy\"\n              label=\"IONOS Nat Gateway Rule Target Subnet\"\n            />\n            <p class=\"help-block\">String. The Target Subnet of the new Nat Gateway Rule.</p>\n          </div>\n          <div class=\"col span-3\">\n            <LabeledInput\n              v-model=\"natRuleTargetPortRangeStart\"\n              :mode=\"mode\"\n              :disabled=\"busy\"\n              label=\"IONOS Nat Gateway Rule Port Range Start\"\n            />\n            <p class=\"help-block\">Integer. The Port Range Start of the new Nat Gateway Rule.</p>\n          </div>\n          <div class=\"col span-3\">\n            <LabeledInput\n              v-model=\"natRuleTargetPortRangeEnd\"\n              :mode=\"mode\"\n              :disabled=\"busy\"\n              label=\"IONOS Nat Gateway Rule Port Range End\"\n            />\n            <p class=\"help-block\">Integer. The Port Range End of the new Nat Gateway Rule.</p>\n          </div>\n        </div>\n        <div class=\"mt-10\">\n          <button @click=\"addNatRule()\">\n            Add NAT Gateway Rule +\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<style scoped lang=\"scss\">\n  .help-block {\n    margin-top: .5em;\n    font-size: .8em;\n    margin-left: 1em;\n  }\n\n  .create-nat {\n    flex-direction: column;\n  }\n\n  .ionoscloud-config {\n    display: flex;\n    align-items: center;\n\n    > .title {\n      font-weight: bold;\n      padding: 4px 0;\n    }\n\n    > .loading {\n      margin-left: 20px;\n      display: flex;\n      align-items: center;\n\n      > i {\n        margin-right: 4px;;\n      }\n    }\n  }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ionoscloud.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ionoscloud.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ionoscloud.vue?vue&type=template&id=7ffa3e75&scoped=true&\"\nimport script from \"./ionoscloud.vue?vue&type=script&lang=js&\"\nexport * from \"./ionoscloud.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ionoscloud.vue?vue&type=style&index=0&id=7ffa3e75&prod&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7ffa3e75\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/vue-style-loader/index.js??ref--10-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-3!../../../node_modules/sass-loader/dist/cjs.js??ref--10-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ionoscloud.vue?vue&type=style&index=0&id=7ffa3e75&prod&scoped=true&lang=scss&\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-3!../../../node_modules/sass-loader/dist/cjs.js??ref--10-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ionoscloud.vue?vue&type=style&index=0&id=7ffa3e75&prod&scoped=true&lang=scss&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7fbccd34\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".clearfix[data-v-7ffa3e75]:after,.clearfix[data-v-7ffa3e75]:before{content:\\\" \\\";display:table}.clearfix[data-v-7ffa3e75]:after{clear:both}.list-unstyled[data-v-7ffa3e75]{margin:0;padding:0;list-style-type:none}.no-select[data-v-7ffa3e75]{-webkit-user-select:none;-moz-user-select:none;user-select:none}.no-resize[data-v-7ffa3e75]{resize:none}.hand[data-v-7ffa3e75]{cursor:pointer;cursor:hand}.fixed[data-v-7ffa3e75]{table-layout:fixed}.clip[data-v-7ffa3e75]{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.clip[data-v-7ffa3e75],.force-wrap[data-v-7ffa3e75]{word-wrap:break-word}.force-wrap[data-v-7ffa3e75]{white-space:normal}.bordered-section[data-v-7ffa3e75]{border-bottom:1px solid var(--border);margin-bottom:20px;padding-bottom:20px}.section-divider[data-v-7ffa3e75]{margin-bottom:20px;margin-top:20px}.help-block[data-v-7ffa3e75]{margin-top:.5em;font-size:.8em;margin-left:1em}.create-nat[data-v-7ffa3e75]{flex-direction:column}.ionoscloud-config[data-v-7ffa3e75]{display:flex;align-items:center}.ionoscloud-config>.title[data-v-7ffa3e75]{font-weight:700;padding:4px 0}.ionoscloud-config>.loading[data-v-7ffa3e75]{margin-left:20px;display:flex;align-items:center}.ionoscloud-config>.loading>i[data-v-7ffa3e75]{margin-right:4px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var map = {\n\t\"./csp/metadata.json\": \"7f57\",\n\t\"./federal/metadata.json\": \"66fa\",\n\t\"./rgs/metadata.json\": \"45d2\",\n\t\"./suse/metadata.json\": \"1d5f\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"dad7\";"],"sourceRoot":""}