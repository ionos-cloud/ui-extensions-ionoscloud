(("undefined"!==typeof self?self:this)["webpackJsonpionoscloud_0_2_1"]=("undefined"!==typeof self?self:this)["webpackJsonpionoscloud_0_2_1"]||[]).push([[3],{"3f9b":function(e,a,t){var l=t("3c10");a=l(!1),a.push([e.i,".help-block[data-v-3af1f63b]{margin-top:.5em;font-size:.8em;margin-left:1em}.create-nat[data-v-3af1f63b]{flex-direction:column}.ionoscloud-config[data-v-3af1f63b]{display:flex;align-items:center}.ionoscloud-config>.title[data-v-3af1f63b]{font-weight:700;padding:4px 0}.ionoscloud-config>.loading[data-v-3af1f63b]{margin-left:20px;display:flex;align-items:center}.ionoscloud-config>.loading>i[data-v-3af1f63b]{margin-right:4px}",""]),e.exports=a},8119:function(e,a,t){"use strict";t.r(a);var l=function(){var e=this,a=e._self._c;e._self._setupProxy;return a("div",[e.$fetchState.pending?a("Loading",{attrs:{delayed:!0}}):e._e(),e.errors.length?a("div",e._l(e.errors,(function(t,l){return a("div",{key:l},[a("Banner",{attrs:{color:"error",label:e.stringify(t)}})],1)})),0):e._e(),a("div",[e._m(0),a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-3"},[a("LabeledSelect",{attrs:{label:"Location",options:e.location.options,loading:e.location.busy,searchable:!1},model:{value:e.location.selected,callback:function(a){e.$set(e.location,"selected",a)},expression:"location.selected"}})],1),a("div",{staticClass:"col span-3"},[a("LabeledSelect",{attrs:{label:"ServerType",options:e.serverType.options,loading:e.serverType.busy,searchable:!1},model:{value:e.serverType.selected,callback:function(a){e.$set(e.serverType,"selected",a)},expression:"serverType.selected"}})],1),"ENTERPRISE"===e.serverType.selected.value?a("div",{staticClass:"col span-3"},[a("LabeledSelect",{attrs:{label:"serverAvailabilityZone",options:e.serverAvailabilityZone.options,loading:e.serverAvailabilityZone.busy,searchable:!1},model:{value:e.serverAvailabilityZone.selected,callback:function(a){e.$set(e.serverAvailabilityZone,"selected",a)},expression:"serverAvailabilityZone.selected"}})],1):e._e(),"ENTERPRISE"===e.serverType.selected.value?a("div",{staticClass:"col span-3"},[a("LabeledSelect",{attrs:{label:"volumeAvailabilityZone",options:e.volumeAvailabilityZone.options,loading:e.volumeAvailabilityZone.busy,searchable:!1},model:{value:e.volumeAvailabilityZone.selected,callback:function(a){e.$set(e.volumeAvailabilityZone,"selected",a)},expression:"volumeAvailabilityZone.selected"}})],1):e._e(),"CUBE"===e.serverType.selected.value?a("div",{staticClass:"col span-3"},[a("LabeledSelect",{attrs:{label:"CUBE Server Template",options:e.template.options,loading:e.template.busy,searchable:!1},model:{value:e.template.selected,callback:function(a){e.$set(e.template,"selected",a)},expression:"template.selected"}})],1):e._e()]),"ENTERPRISE"===e.serverType.selected.value?a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-3"},[a("LabeledSelect",{attrs:{label:"CpuFamily",options:e.cpuFamily.options,loading:e.cpuFamily.busy,searchable:!1},model:{value:e.cpuFamily.selected,callback:function(a){e.$set(e.cpuFamily,"selected",a)},expression:"cpuFamily.selected"}})],1),a("div",{staticClass:"col span-3"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,required:!0,label:"CPU Core Count"},model:{value:e.cores,callback:function(a){e.cores=a},expression:"cores"}})],1),a("div",{staticClass:"col span-6"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,required:!0,label:"RAM size (in MiB)"},model:{value:e.ram,callback:function(a){e.ram=a},expression:"ram"}}),a("p",{staticClass:"help-block"},[e._v("Must be a multiple of 256")])],1)]):e._e(),"ENTERPRISE"===e.serverType.selected.value?a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-6"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,required:!0,label:"Disk size (in GB)"},model:{value:e.diskSize,callback:function(a){e.diskSize=a},expression:"diskSize"}})],1),a("div",{staticClass:"col span-6"},[a("LabeledSelect",{attrs:{label:"DiskType",options:e.diskType.options,loading:e.diskType.busy,searchable:!1,required:!0},model:{value:e.diskType.selected,callback:function(a){e.$set(e.diskType,"selected",a)},expression:"diskType.selected"}})],1)]):e._e(),a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-6"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,required:!0,label:"Image Alias or ID"},model:{value:e.image,callback:function(a){e.image=a},expression:"image"}}),e._m(1)],1),a("div",{staticClass:"col span-6"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,required:!0,label:"Image Password",type:"password"},model:{value:e.imagePassword,callback:function(a){e.imagePassword=a},expression:"imagePassword"}})],1)]),a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-12"},[a("label",{staticClass:"acc-label"},[e._v("Cloud init configuration.")]),a("textarea",{directives:[{name:"model",rawName:"v-model",value:e.cloudInit,expression:"cloudInit"}],attrs:{disabled:e.busy||e.mode===e._VIEW},domProps:{value:e.cloudInit},on:{input:function(a){a.target.composing||(e.cloudInit=a.target.value)}}}),e._m(2)])]),a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-4"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"SSH User"},model:{value:e.sshUser,callback:function(a){e.sshUser=a},expression:"sshUser"}}),a("p",{staticClass:"help-block"},[e._v("Optional. User to connect to via SSH.")])],1),a("div",{staticClass:"col span-4"},[a("Checkbox",{attrs:{label:"Send SSH in user data.",mode:e.mode,disabled:e.busy},model:{value:e.sshInCloudInit,callback:function(a){e.sshInCloudInit=a},expression:"sshInCloudInit"}}),a("p",{staticClass:"help-block"},[e._v("Should the driver only add the SSH info in the user data? (required for custom images).")])],1)]),a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-4"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"Datacenter ID"},model:{value:e.datacenterId,callback:function(a){e.datacenterId=a},expression:"datacenterId"}}),a("p",{staticClass:"help-block"},[e._v("Optional, UUID-4 format. If you want to use an existing IONOS Datacenter to host this VM, you can provide its ID here.")])],1),a("div",{staticClass:"col span-4"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"Datacenter Name"},model:{value:e.datacenterName,callback:function(a){e.datacenterName=a},expression:"datacenterName"}}),a("p",{staticClass:"help-block"},[e._v("String. If you want to use an existing IONOS Datacenter to host this VM, you can change the name here. Please note that if the ID is set it will the prioritized.")])],1)]),a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-4"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"LAN ID"},model:{value:e.lanId,callback:function(a){e.lanId=a},expression:"lanId"}}),a("p",{staticClass:"help-block"},[e._v('Optional, integer. The LAN the VM will attach to. If blank, a default LAN will be created. Overrides "Private LAN" setting.')])],1),a("div",{staticClass:"col span-4"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"LAN Name"},model:{value:e.lanName,callback:function(a){e.lanName=a},expression:"lanName"}}),a("p",{staticClass:"help-block"},[e._v("String. If you want to use an existing IONOS LAN, you can change the name here. Please note that if the ID is set it will the prioritized.")])],1),a("div",{staticClass:"col span-4"},[a("Checkbox",{attrs:{label:"Make Default LAN Private",mode:e.mode,disabled:e.busy},model:{value:e.privateLan,callback:function(a){e.privateLan=a},expression:"privateLan"}}),a("p",{staticClass:"help-block"},[e._v("If the default LAN does not exist, create a private LAN")])],1)]),a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-4"},[a("StringList",{attrs:{label:"Additional LANs",items:e.additionalLans,mode:e.mode,disabled:e.busy},on:{change:function(a){return e.onChangeAdditionalLans(a)}},model:{value:e.additionalLans,callback:function(a){e.additionalLans=a},expression:"additionalLans"}}),a("p",{staticClass:"help-block"},[e._v("Optional. Exiting Ionos LAN names. Every LAN in the datacenter which has its name in this list will be connected to the server, names which are not found will be ignored.")])],1)]),a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-4"},[a("Checkbox",{attrs:{label:"NIC DHCP",mode:e.mode,disabled:e.busy},model:{value:e.nicDhcp,callback:function(a){e.nicDhcp=a},expression:"nicDhcp"}}),a("p",{staticClass:"help-block"},[e._v("Set whether the created NIC should have dhcp set on or off")])],1),a("div",{staticClass:"col span-4"},[a("StringList",{attrs:{label:"NIC Ips",items:e.nicIps,mode:e.mode,disabled:e.busy},on:{change:function(a){return e.onChangeNicIps(a)}},model:{value:e.nicIps,callback:function(a){e.nicIps=a},expression:"nicIps"}}),a("p",{staticClass:"help-block"},[e._v("Optional. IPBlock reserved IPs. If not set, the driver will reserve an IPBlock automatically or let the API set a private IP if the LAN is private")])],1)]),a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-4"},[a("Checkbox",{attrs:{label:"Wait for NIC IP change",mode:e.mode,disabled:e.busy},model:{value:e.waitForIpChange,callback:function(a){e.waitForIpChange=a},expression:"waitForIpChange"}}),a("p",{staticClass:"help-block"},[e._v("Should the driver wait for the NIC IP to be set by external sources?")])],1),a("div",{staticClass:"col span-4"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"Wait for IP change timeout"},model:{value:e.waitForIpChangeTimeout,callback:function(a){e.waitForIpChangeTimeout=a},expression:"waitForIpChangeTimeout"}})],1)]),a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-4"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"IONOS Nat Gateway ID"},model:{value:e.natId,callback:function(a){e.natId=a},expression:"natId"}}),a("p",{staticClass:"help-block"},[e._v("Optional, UUID-4 format. Use a preconfigured NAT Gateway. Datacenter ID and Private LAN required. Overrides NAT Config below")])],1),a("div",{staticClass:"col span-4"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"IONOS Nat Gateway Name"},model:{value:e.natName,callback:function(a){e.natName=a},expression:"natName"}}),a("p",{staticClass:"help-block"},[e._v('String. If the "Create NAT" checkbox is checked, will try creating a NAT with this name. If one already exists, will use the existing NAT.')])],1),a("div",{staticClass:"col span-4"},[a("Checkbox",{attrs:{label:"Create a configurable NAT",mode:e.mode,disabled:e.busy},model:{value:e.createNat,callback:function(a){e.createNat=a},expression:"createNat"}}),e._m(3)],1)]),!0===e.createNat?a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-4"},[a("StringList",{attrs:{label:"Custom NAT: map LANs to Gateway IPs",items:e.natLansToGateways,mode:e.mode,disabled:e.busy},on:{change:function(a){return e.onChangeNatLansToGateways(a)}},model:{value:e.natLansToGateways,callback:function(a){e.natLansToGateways=a},expression:"natLansToGateways"}}),a("p",{staticClass:"help-block"},[e._v("Optional. Maps Lan IDs to a specific Gateway IP. Gateway IP must be set manually as default route.")])],1),a("div",{staticClass:"col span-4"},[a("StringList",{attrs:{label:"Custom NAT: Public IPs",items:e.natPublicIps,mode:e.mode,disabled:e.busy},on:{change:function(a){return e.onChangeNatPublicIps(a)}},model:{value:e.natPublicIps,callback:function(a){e.natPublicIps=a},expression:"natPublicIps"}}),a("p",{staticClass:"help-block"},[e._v("Optional. IPBlock reserved IPs. If not set, the driver will reserve an IPBlock automatically")])],1),a("div",{staticClass:"col span-4"},[a("StringList",{attrs:{label:"Custom NAT: Flowlogs",items:e.natFlowlogs,mode:e.mode,disabled:e.busy},on:{change:function(a){return e.onChangeNatFlowlogs(a)}},model:{value:e.natFlowlogs,callback:function(a){e.natFlowlogs=a},expression:"natFlowlogs"}}),a("p",{staticClass:"help-block"},[e._v("Optional. NAT Flowlogs.")])],1)]):e._e(),!0===e.createNat?a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-6"},[a("StringList",{attrs:{label:"Custom NAT: Rules",items:e.natRules,mode:e.mode,disabled:e.busy},on:{change:function(a){return e.onChangeNatRules(a)}},model:{value:e.natRules,callback:function(a){e.natRules=a},expression:"natRules"}}),a("p",{staticClass:"help-block"},[e._v("Optional. NAT Rules. Use the form bellow to add a new NAT rule")])],1)]):e._e(),e.createNat?a("div",{staticClass:"card-container create-nat"},[a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-3"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"IONOS Nat Gateway Rule Name"},model:{value:e.natRuleName,callback:function(a){e.natRuleName=a},expression:"natRuleName"}}),a("p",{staticClass:"help-block"},[e._v("String. The name of the new Nat Gateway Rule.")])],1),a("div",{staticClass:"col span-3"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"IONOS Nat Gateway Rule Type"},model:{value:e.natRuleType,callback:function(a){e.natRuleType=a},expression:"natRuleType"}}),a("p",{staticClass:"help-block"},[e._v("String. The type of the new Nat Gateway Rule.")])],1),a("div",{staticClass:"col span-3"},[a("LabeledSelect",{attrs:{label:"natRuleProtocol",options:e.natRuleProtocol.options,loading:e.natRuleProtocol.busy,searchable:!1},model:{value:e.natRuleProtocol.selected,callback:function(a){e.$set(e.natRuleProtocol,"selected",a)},expression:"natRuleProtocol.selected"}})],1),a("div",{staticClass:"col span-3"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"IONOS Nat Gateway Rule Public IP"},model:{value:e.natRulePublicIp,callback:function(a){e.natRulePublicIp=a},expression:"natRulePublicIp"}}),a("p",{staticClass:"help-block"},[e._v("String. The Public IP of the new Nat Gateway Rule, leave black and the driver will use the nat gateway IP.")])],1)]),a("div",{staticClass:"row mt-10"},[a("div",{staticClass:"col span-3"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"IONOS Nat Gateway Rule Source Subnet"},model:{value:e.natRuleSourceSubnet,callback:function(a){e.natRuleSourceSubnet=a},expression:"natRuleSourceSubnet"}}),a("p",{staticClass:"help-block"},[e._v("String. The Source Subnet of the new Nat Gateway Rule, leave black and the driver will use the first ip on the nic with mask 24.")])],1),a("div",{staticClass:"col span-3"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"IONOS Nat Gateway Rule Target Subnet"},model:{value:e.natRuleTargetSubnet,callback:function(a){e.natRuleTargetSubnet=a},expression:"natRuleTargetSubnet"}}),a("p",{staticClass:"help-block"},[e._v("String. The Target Subnet of the new Nat Gateway Rule.")])],1),a("div",{staticClass:"col span-3"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"IONOS Nat Gateway Rule Port Range Start"},model:{value:e.natRuleTargetPortRangeStart,callback:function(a){e.natRuleTargetPortRangeStart=a},expression:"natRuleTargetPortRangeStart"}}),a("p",{staticClass:"help-block"},[e._v("Integer. The Port Range Start of the new Nat Gateway Rule.")])],1),a("div",{staticClass:"col span-3"},[a("LabeledInput",{attrs:{mode:e.mode,disabled:e.busy,label:"IONOS Nat Gateway Rule Port Range End"},model:{value:e.natRuleTargetPortRangeEnd,callback:function(a){e.natRuleTargetPortRangeEnd=a},expression:"natRuleTargetPortRangeEnd"}}),a("p",{staticClass:"help-block"},[e._v("Integer. The Port Range End of the new Nat Gateway Rule.")])],1)]),a("div",{staticClass:"mt-10"},[a("button",{on:{click:function(a){return e.addNatRule()}}},[e._v(" Add NAT Gateway Rule + ")])])]):e._e()])],1)},s=[function(){var e=this,a=e._self._c;e._self._setupProxy;return a("div",{staticClass:"ionoscloud-config"},[a("div",{staticClass:"title"},[e._v(" ionoscloud Configuration ")])])},function(){var e=this,a=e._self._c;e._self._setupProxy;return a("p",{staticClass:"help-block"},[e._v("You can use "),a("a",{attrs:{href:"https://docs.ionos.com/cli-ionosctl",target:"_blank",rel:"noopener noreferrer"}},[e._v("ionosctl image list [-F name=operatingSystem]")])])},function(){var e=this,a=e._self._c;e._self._setupProxy;return a("p",{staticClass:"help-block"},[e._v("Optional. "),a("a",{attrs:{href:"https://cloudinit.readthedocs.io/en/latest/topics/examples.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cloud-init Documentation")]),e._v(".")])},function(){var e=this,a=e._self._c;e._self._setupProxy;return a("p",{staticClass:"help-block"},[e._v("Requires private LAN. You can override settings of this NAT using the form below "),a("a",{attrs:{href:"#",target:"_blank",rel:"noopener noreferrer"}},[e._v("See open ports here")]),e._v(". Must set gateway IP as default route via cloud config, default: 10.0.0.1")])}],i=t("8bbf"),n=t("15ca"),o=t("6418"),u=t("305c"),r=t("466b"),d=t("8e93"),c=t("907c"),v=t("0df0"),p=t("109e"),b=t("3e9d"),h=t("da25"),m=t("b994"),f=t("146c");const C=[{label:"frankfurt",value:{value:"de/fra",name:"frankfurt"}},{label:"berlin",value:{value:"de/txl",name:"berlin"}},{label:"logrono",value:{value:"es/vit",name:"logrono"}},{label:"paris",value:{value:"fr/par",name:"paris"}},{label:"worcester",value:{value:"gb/bhx",name:"worcester"}},{label:"london",value:{value:"gb/lhr",name:"london"}},{label:"newark",value:{value:"us/ewr",name:"newark"}},{label:"lasvegas",value:{value:"us/las",name:"lasvegas"}},{label:"lenexa",value:{value:"us/mci",name:"lenexa"}}],I=[{label:"Enterprise",value:{value:"ENTERPRISE",name:"Enterprise"}},{label:"Cube",value:{value:"CUBE",name:"Cube"}}],y=[{label:"INTEL_XEON",value:{value:"INTEL_XEON",name:"INTEL_XEON"}},{label:"INTEL_SKYLAKE",value:{value:"INTEL_SKYLAKE",name:"INTEL_SKYLAKE"}},{label:"INTEL_ICELAKE",value:{value:"INTEL_ICELAKE",name:"INTEL_ICELAKE"}},{label:"AMD_EPYC",value:{value:"AMD_EPYC",name:"AMD_EPYC"}}],g=[{label:"AUTO",value:{value:"AUTO",name:"AUTO"}},{label:"ZONE_1",value:{value:"ZONE_1",name:"ZONE_1"}},{label:"ZONE_2",value:{value:"ZONE_2",name:"ZONE_2"}}],N=[{label:"AUTO",value:{value:"AUTO",name:"AUTO"}},{label:"ZONE_1",value:{value:"ZONE_1",name:"ZONE_1"}},{label:"ZONE_2",value:{value:"ZONE_2",name:"ZONE_2"}},{label:"ZONE_3",value:{value:"ZONE_3",name:"ZONE_3"}}],T=[{label:"Basic Cube L",value:{value:"Basic Cube L",name:"Basic Cube L"}},{label:"Basic Cube M",value:{value:"Basic Cube M",name:"Basic Cube M"}},{label:"Basic Cube S",value:{value:"Basic Cube S",name:"Basic Cube S"}},{label:"Basic Cube XL",value:{value:"Basic Cube XL",name:"Basic Cube XL"}},{label:"Basic Cube XS",value:{value:"Basic Cube XS",name:"Basic Cube XS"}},{label:"Memory Cube L",value:{value:"Memory Cube L",name:"Memory Cube L"}},{label:"Memory Cube L",value:{value:"Memory Cube L",name:"Memory Cube L"}},{label:"Memory Cube M",value:{value:"Memory Cube M",name:"Memory Cube M"}},{label:"Memory Cube S",value:{value:"Memory Cube S",name:"Memory Cube S"}},{label:"Memory Cube XL",value:{value:"Memory Cube XL",name:"Memory Cube XL"}}],S=[{label:"HDD",value:{value:"HDD",name:"HDD"}},{label:"SSD",value:{value:"SSD",name:"SSD"}},{label:"SSD Standard",value:{value:"SSD Standard",name:"SSD Standard"}},{label:"SSD Premium",value:{value:"SSD Premium",name:"SSD Premium"}},{label:"DAS",value:{value:"DAS",name:"DAS"}},{label:"ISO",value:{value:"ISO",name:"ISO"}}];function w(e,a,t){let l=t||a,s=e||l[0].value.value,i=l[0].value,n=!1;if(l.forEach(e=>{e.value.value==s&&(i=e.value,n=!0)}),!n){let e={label:s,value:{value:s,name:s}};l.push(e),i=e.value}return{options:l,selected:i,busy:!1,enabled:!1}}function L(){let e=[{label:"ALL",value:{value:"ALL",name:"ALL"}},{label:"TCP",value:{value:"TCP",name:"TCP"}},{label:"UDP",value:{value:"UDP",name:"UDP"}},{label:"ICMP",value:{value:"ICMP",name:"ICMP"}}];return{options:e,selected:e[0].value,busy:!1,enabled:!1}}function P(e){return!!/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(e)}function k(e){let a=e.split("/");return 2==a.length&&P(a[0])&&!Number.isNaN(parseInt(a[1]))}var A=Object(i["defineComponent"])({components:{Banner:o["a"],Loading:n["a"],Checkbox:v["a"],StringList:p["a"],LabeledInput:d["a"],LabeledSelect:r["a"],LabeledTooltip:f["LabeledTooltip"]},mixins:[u["a"]],props:{uuid:{type:String,required:!0},cluster:{type:Object,default:()=>({})},credentialId:{type:String,required:!0},disabled:{type:Boolean,default:!1},busy:{type:Boolean,default:!1},provider:{type:String,required:!0}},async fetch(){if(this.errors=[],this.credentialId)if(this.mode!==h["c"]){try{this.credential=await this.$store.dispatch("rancher/find",{type:c["c"].CLOUD_CREDENTIAL,id:this.credentialId})}catch(l){this.credential=null}try{const l=this.credentialId.replace(":","/"),s=await this.$store.dispatch("management/find",{type:c["e"],id:l});let i=s.data["ionoscloudcredentialConfig-password"];const n=atob(i);i=s.data["ionoscloudcredentialConfig-token"];const o=atob(i);i=s.data["ionoscloudcredentialConfig-username"];const u=atob(i);i=s.data["ionoscloudcredentialConfig-endpoint"];const r=atob(i);let d={basePath:r};void 0!=o?d.apiKey=o:void 0!=u&&void 0!=n&&(d.username=u,d.password=n);const v=new m["Configuration"](d),p=new m["LocationsApi"](v),b=new m["TemplatesApi"](v);let h=p.locationsGet({depth:1}),f=await b.templatesGet({depth:1});if(f&&200===f.status){var e;let a=[];f.data.items.forEach(e=>{a.push({label:e.properties.name,value:{value:e.properties.name,name:e.properties.name}})}),this.$set(this,"template",w(null===(e=this.value)||void 0===e?void 0:e.template,T,a.sort((e,a)=>e.value.value.localeCompare(a.value.value))))}if(h=await h,h&&200===h.status){var a,t;let e=[],l=new Set,s=[];h.data.items.forEach(a=>{e.push({label:a.properties.name,value:{value:a.id,name:a.properties.name}}),a.properties.cpuArchitecture&&a.properties.cpuArchitecture.forEach(e=>{l.add(e.cpuFamily)})}),l.forEach(e=>s.push({label:e,value:{value:e,name:e}})),this.$set(this,"location",w(null===(a=this.value)||void 0===a?void 0:a.location,C,e.sort((e,a)=>e.value.value.localeCompare(a.value.value)))),this.$set(this,"cpuFamily",w(null===(t=this.value)||void 0===t?void 0:t.cpuFamily,y,s.sort((e,a)=>e.value.value.localeCompare(a.value.value))))}}catch(l){console.error(l)}this.$set(this,"authenticating",!0),this.$emit("validationChanged",!0)}else this.initForViewMode()},data(){var e,a,t,l,s,i,n,o,u,r,d,c,v,p,b,h,m,f,P,k,A,_,R,E,O,x,D,F,M,G,U,Z;const B=["rule01:SNAT:TCP::::22:22","rule02:SNAT:UDP::::53:53","rule03:SNAT:TCP::::80:80","rule04:SNAT:TCP::::179:179","rule05:SNAT:TCP::::443:443","rule06:SNAT:TCP::::2376:2376","rule07:SNAT:UDP::::4789:4789","rule08:SNAT:TCP::::6443:6443","rule09:SNAT:TCP::::6783:6783","rule10:SNAT:TCP::::8443:8443","rule11:SNAT:UDP::::8472:8472","rule12:SNAT:TCP::::9099:9099","rule13:SNAT:TCP::::9100:9100","rule14:SNAT:TCP::::9443:9443","rule15:SNAT:TCP::::9796:9796","rule16:SNAT:TCP::::10254:10254","rule17:SNAT:TCP::::10256:10256","rule18:SNAT:TCP::::2379:2380","rule19:SNAT:UDP::::6783:6784","rule20:SNAT:TCP::::10250:10252","rule21:SNAT:TCP::::30000:32767","rule22:SNAT:UDP::::30000:32767","rule23:SNAT:ALL:::::"];return{authenticating:!1,ready:!1,os:null,password:null,havePassword:!1,location:w(null===(e=this.value)||void 0===e?void 0:e.location,C,null),serverType:w((null===(a=this.value)||void 0===a?void 0:a.serverType)||"ENTERPRISE",I,null),template:w(null===(t=this.value)||void 0===t?void 0:t.template,T,null),serverAvailabilityZone:w((null===(l=this.value)||void 0===l?void 0:l.serverAvailabilityZone)||"AUTO",g,null),volumeAvailabilityZone:w((null===(s=this.value)||void 0===s?void 0:s.volumeAvailabilityZone)||"AUTO",N,null),cpuFamily:w(null===(i=this.value)||void 0===i?void 0:i.cpuFamily,y,null),diskType:w((null===(n=this.value)||void 0===n?void 0:n.diskType)||"HDD",S,null),cores:(null===(o=this.value)||void 0===o?void 0:o.cores)||"2",ram:(null===(u=this.value)||void 0===u?void 0:u.ram)||"2048",diskSize:(null===(r=this.value)||void 0===r?void 0:r.diskSize)||"50",image:(null===(d=this.value)||void 0===d?void 0:d.image)||"ubuntu:20.04",imagePassword:null===(c=this.value)||void 0===c?void 0:c.imagePassword,cloudInit:null===(v=this.value)||void 0===v?void 0:v.cloudInit,sshUser:(null===(p=this.value)||void 0===p?void 0:p.sshUser)||"root",sshInCloudInit:(null===(b=this.value)||void 0===b?void 0:b.sshInCloudInit)||!1,datacenterId:null===(h=this.value)||void 0===h?void 0:h.datacenterId,datacenterName:(null===(m=this.value)||void 0===m?void 0:m.datacenterName)||"docker-machine-data-center",lanId:null===(f=this.value)||void 0===f?void 0:f.lanId,lanName:(null===(P=this.value)||void 0===P?void 0:P.lanName)||"docker-machine-lan",privateLan:(null===(k=this.value)||void 0===k?void 0:k.privateLan)||!1,nicDhcp:(null===(A=this.value)||void 0===A?void 0:A.nicDhcp)||!1,nicIps:(null===(_=this.value)||void 0===_?void 0:_.nicIps)||[],additionalLans:(null===(R=this.value)||void 0===R?void 0:R.additionalLans)||[],waitForIpChange:(null===(E=this.value)||void 0===E?void 0:E.waitForIpChange)||!1,waitForIpChangeTimeout:(null===(O=this.value)||void 0===O?void 0:O.waitForIpChangeTimeout)||"600",natId:null===(x=this.value)||void 0===x?void 0:x.natId,natName:(null===(D=this.value)||void 0===D?void 0:D.natName)||"docker-machine-nat",createNat:(null===(F=this.value)||void 0===F?void 0:F.createNat)||!1,natLansToGateways:this.getNatLansToGateways(null===(M=this.value)||void 0===M?void 0:M.natLansToGateways)||[],natFlowlogs:(null===(G=this.value)||void 0===G?void 0:G.natFlowlogs)||[],natPublicIps:(null===(U=this.value)||void 0===U?void 0:U.natPublicIps)||[],natRules:"create"==this.mode?B:(null===(Z=this.value)||void 0===Z?void 0:Z.natRules)||[],natRuleName:"",natRuleType:"SNAT",natRuleProtocol:L(),natRuleSourceSubnet:"",natRulePublicIp:"",natRuleTargetSubnet:"",natRuleTargetPortRangeStart:"",natRuleTargetPortRangeEnd:"",errors:null}},watch:{credentialId(){this.$fetch()}},methods:{stringify:b["b"],initForViewMode(){var e,a,t,l,s,i;this.fakeSelectOptions(this.Location,null===(e=this.value)||void 0===e?void 0:e.location),this.fakeSelectOptions(this.ServerType,null===(a=this.value)||void 0===a?void 0:a.serverType),this.fakeSelectOptions(this.serverAvailabilityZone,null===(t=this.value)||void 0===t?void 0:t.serverAvailabilityZone),this.fakeSelectOptions(this.volumeAvailabilityZone,null===(l=this.value)||void 0===l?void 0:l.volumeAvailabilityZone),this.fakeSelectOptions(this.CpuFamily,null===(s=this.value)||void 0===s?void 0:s.cpuFamily),this.fakeSelectOptions(this.DiskType,null===(i=this.value)||void 0===i?void 0:i.diskType)},fakeSelectOptions(e,a){e.busy=!1,e.enabled=!1,e.options=[],a&&e.options.push({label:a,value:a}),e.selected=a},onChangeNicIps(e){for(let a of e)if(!P(a))return void alert("Invalid IP detected: "+a);this.nicIps=e},onChangeAdditionalLans(e){this.additionalLans=e},onChangeNatPublicIps(e){for(let a of e)if(!P(a))return void alert("Invalid IP detected: "+a);this.natPublicIps=e},onChangeNatLansToGateways(e){for(let a of e){let e=a.split(":");if(2!=e.length)return void alert("Invalid entry detected: "+a+". The accepted format is LanId:IP!");let t=e[0];if(Number.isNaN(parseInt(t)))return void alert("Invalid LAN ID detected: "+t);let l=e[1];if(!P(l))return void alert("Invalid IP detected: "+l)}this.natLansToGateways=e.sort()},onChangeNatFlowlogs(e){for(let a of e){let e=a.split(":");if(4!=e.length)return void alert("Invalid entry detected: "+a+". The accepted format is name:action:direction:bucket!");let t=e[1];if(!["ACCEPTED","REJECTED","ALL"].includes(t))return void alert("Invalid action: "+t+". Must be one of ['ACCEPTED', 'REJECTED', 'ALL']");let l=e[2];if(!["INGRESS","EGRESS","BIDIRECTIONAL"].includes(l))return void alert("Invalid direction: "+l+". Must be one of ['INGRESS', 'EGRESS', 'BIDIRECTIONAL']")}this.natFlowlogs=e.sort()},checkNatRule(e){let a=e.split(":");return 8!=a.length?(alert("Invalid entry detected: "+e+". The accepted format is name:type:protocol:public_ip:source_subnet:target_subnet:target_port_range_start:target_port_range_end!"),!1):["SNAT"].includes(a[1])?["TCP","UDP","ICMP","ALL"].includes(a[2])?a[3]&&!P(a[3])?(alert("Invalid IP detected: "+a[3]),!1):a[4]&&!k(a[4])?(alert("Invalid Subnet detected: "+a[4]),!1):a[5]&&!k(a[5])?(alert("Invalid Subnet detected: "+a[5]),!1):a[6]&&(!Number.isInteger(Number(a[6]))||Number(a[6])<0)?(alert("Invalid Port detected: "+a[6]),!1):!(a[7]&&(!Number.isInteger(Number(a[7]))||Number(a[7])<0))||(alert("Invalid Port detected: "+a[7]),!1):(alert("Invalid rule protocol: "+a[2]+". Must be one of ['TCP', 'UDP', 'ICMP', 'ALL']"),!1):(alert("Invalid rule type: "+a[1]+". Must be one of ['SNAT']"),!1)},onChangeNatRules(e){for(let a of e)if(!this.checkNatRule(a))return!1;this.natRules=e.sort()},addNatRule(){let e=[this.natRuleName,this.natRuleType,this.natRuleProtocol.selected.value,this.natRulePublicIp,this.natRuleSourceSubnet,this.natRuleTargetSubnet,this.natRuleTargetPortRangeStart,this.natRuleTargetPortRangeEnd].join(":");this.natRules.includes(e)?alert("Rule is already in list!"):this.checkNatRule(e)&&this.natRules.push(e)},onPrivateKeyFileSelected(e){this.filename=e.file.name,this.privateKeyFile=e.data,this.privateKeyFieldType="text",this.$emit("validationChanged",!0)},formatNatLansToGateways(){let e={};for(let t of this.natLansToGateways){let a=t.split(":"),l=a[0],s=a[1];e.hasOwnProperty(l)?e[l].push(s):e[l]=[s]}let a=[];for(let t in e)a.push(`${t}=${e[t].join(",")}`);return a.join(":")},getNatLansToGateways(e){if(!e)return;let a,t=[];for(let l of e.split(":")){a=l.split("=");for(let e of a[1].split(","))t.push(`${a[0]}:${e}`)}return t},syncValue(){var e,a,t,l,s,i,n;this.value.location=null===(e=this.location.selected)||void 0===e?void 0:e.value,this.value.serverType=null===(a=this.serverType.selected)||void 0===a?void 0:a.value,this.value.serverAvailabilityZone=null===(t=this.serverAvailabilityZone.selected)||void 0===t?void 0:t.value,this.value.template=null===(l=this.template.selected)||void 0===l?void 0:l.value,this.value.volumeAvailabilityZone=null===(s=this.volumeAvailabilityZone.selected)||void 0===s?void 0:s.value,this.value.cpuFamily=null===(i=this.cpuFamily.selected)||void 0===i?void 0:i.value,this.value.diskType=null===(n=this.diskType.selected)||void 0===n?void 0:n.value,this.value.cores=this.cores,this.value.ram=this.ram,this.value.diskSize=this.diskSize,this.value.image=this.image,this.value.imagePassword=this.imagePassword,this.value.cloudInit=this.cloudInit,this.value.sshUser=this.sshUser,this.value.sshInCloudInit=this.sshInCloudInit,this.value.datacenterId=this.datacenterId,this.value.datacenterName=this.datacenterName,this.value.lanId=this.lanId,this.value.lanName=this.lanName,this.value.privateLan=this.privateLan,this.value.nicDhcp=this.nicDhcp,this.value.nicIps=this.nicIps,this.value.additionalLans=this.additionalLans,this.value.waitForIpChange=this.waitForIpChange,this.value.waitForIpChangeTimeout=this.waitForIpChangeTimeout,this.value.natId=this.natId,this.value.natName=this.natName,this.value.createNat=this.createNat,this.value.natLansToGateways=this.formatNatLansToGateways(),this.value.natFlowlogs=this.natFlowlogs,this.value.natPublicIps=this.natPublicIps,this.value.natRules=this.natRules,this.value.skipDefaultNatRules=!0},test(){this.syncValue()}}}),_=A,R=(t("da2f"),t("2be6")),E=Object(R["a"])(_,l,s,!1,null,"3af1f63b",null);a["default"]=E.exports},b118:function(e,a,t){var l=t("3f9b");l.__esModule&&(l=l.default),"string"===typeof l&&(l=[[e.i,l,""]]),l.locals&&(e.exports=l.locals);var s=t("0ed3").default;s("e511ce1e",l,!0,{sourceMap:!1,shadowMode:!1})},da2f:function(e,a,t){"use strict";t("b118")},dad7:function(e,a,t){var l={"./csp/metadata.json":"7f57","./federal/metadata.json":"66fa","./rgs/metadata.json":"45d2","./suse/metadata.json":"1d5f"};function s(e){var a=i(e);return t(a)}function i(e){if(!t.o(l,e)){var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}return l[e]}s.keys=function(){return Object.keys(l)},s.resolve=i,e.exports=s,s.id="dad7"}}]);
//# sourceMappingURL=ionoscloud-0.2.1.umd.min.machine-config.js.map