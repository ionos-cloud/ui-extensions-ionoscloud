{"version":3,"sources":["webpack://ionoscloud-0.2.1/./machine-config/ionoscloud.vue?2a91","webpack://ionoscloud-0.2.1/./machine-config/ionoscloud.vue","webpack://ionoscloud-0.2.1/machine-config/ionoscloud.vue","webpack://ionoscloud-0.2.1/./machine-config/ionoscloud.vue?18ca","webpack://ionoscloud-0.2.1/./machine-config/ionoscloud.vue?3848","webpack://ionoscloud-0.2.1/./machine-config/ionoscloud.vue?d10e","webpack://ionoscloud-0.2.1/./machine-config/ionoscloud.vue?3808","webpack://ionoscloud-0.2.1/./.shell/assets/brand sync ^\\.\\/.*\\/metadata\\.json$"],"names":["___CSS_LOADER_API_IMPORT___","exports","push","module","i","render","_vm","this","_c","_self","_setupProxy","$fetchState","pending","attrs","_e","errors","length","_l","err","idx","key","stringify","_m","staticClass","location","options","busy","model","value","selected","callback","$$v","$set","expression","serverType","serverAvailabilityZone","volumeAvailabilityZone","template","cpuFamily","mode","cores","ram","_v","diskSize","diskType","image","imagePassword","directives","name","rawName","cloudInit","_VIEW","domProps","on","$event","target","composing","sshUser","sshInCloudInit","datacenterId","datacenterName","lanId","lanName","privateLan","additionalLans","onChangeAdditionalLans","nicDhcp","nicIps","onChangeNicIps","waitForIpChange","waitForIpChangeTimeout","natId","natName","createNat","natLansToGateways","onChangeNatLansToGateways","natPublicIps","onChangeNatPublicIps","natFlowlogs","onChangeNatFlowlogs","natRules","onChangeNatRules","natRuleName","natRuleType","natRuleProtocol","natRulePublicIp","natRuleSourceSubnet","natRuleTargetSubnet","natRuleTargetPortRangeStart","natRuleTargetPortRangeEnd","addNatRule","staticRenderFns","LOCATION_SELECT_OPTIONS","label","SERVER_TYPE_SELECT_OPTIONS","CPU_FAMILY_SELECT_OPTIONS","SERVER_AVAILABILITY_ZONE_SELECT_OPTIONS","VOLUME_AVAILABILITY_ZONE_SELECT_OPTIONS","TEMPLATE_SELECT_OPTIONS","DISK_TYPE_SELECT_OPTIONS","initSelect","initialValue","defaultSelectOptions","apiSelectOptions","usedSelectOptions","usedInitialValue","selected_option","found","forEach","element","newElem","enabled","initNatRuleProtocol","select_options","validateIp","ip","test","validateSubnet","subnet","splitSubnet","split","Number","isNaN","parseInt","defineComponent","components","Banner","Loading","Checkbox","StringList","LabeledInput","LabeledSelect","LabeledTooltip","mixins","CreateEditView","props","uuid","type","String","required","cluster","Object","default","credentialId","disabled","Boolean","provider","credential","$store","dispatch","NORMAN","CLOUD_CREDENTIAL","id","e","replace","secret","SECRET","data","password","atob","token","username","endpoint","authConfig","basePath","undefined","apiKey","config","Ionos","locationsApi","templatesApi","locationResponse","locationsGet","depth","templateResponse","templatesGet","status","_this$value","templateSelectOptions","items","properties","sort","a","b","localeCompare","_this$value2","_this$value3","locationSelectOptions","cpuFamilies","Set","cpuFamilySelectOptions","cpuArchitecture","add","console","error","$emit","initForViewMode","_this$value4","_this$value5","_this$value6","_this$value7","_this$value8","_this$value9","_this$value10","_this$value11","_this$value12","_this$value13","_this$value14","_this$value15","_this$value16","_this$value17","_this$value18","_this$value19","_this$value20","_this$value21","_this$value22","_this$value23","_this$value24","_this$value25","_this$value26","_this$value27","_this$value28","_this$value29","_this$value30","_this$value31","_this$value32","_this$value33","_this$value34","_this$value35","defaultNatRules","authenticating","ready","os","havePassword","getNatLansToGateways","watch","$fetch","methods","_this$value36","_this$value37","_this$value38","_this$value39","_this$value40","_this$value41","fakeSelectOptions","Location","ServerType","CpuFamily","DiskType","list","event","alert","el","spl","action","includes","direction","checkNatRule","rule","splitRule","isInteger","join","onPrivateKeyFileSelected","v","filename","file","privateKeyFile","privateKeyFieldType","formatNatLansToGateways","aux","hasOwnProperty","formatedValues","stringValue","arr","syncValue","_this$location$select","_this$serverType$sele","_this$serverAvailabil","_this$template$select","_this$volumeAvailabil","_this$cpuFamily$selec","_this$diskType$select","skipDefaultNatRules","component","content","__esModule","locals","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","resolve"],"mappings":"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","file":"ionoscloud-0.2.1.umd.min.machine-config.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".help-block[data-v-3af1f63b]{margin-top:.5em;font-size:.8em;margin-left:1em}.create-nat[data-v-3af1f63b]{flex-direction:column}.ionoscloud-config[data-v-3af1f63b]{display:flex;align-items:center}.ionoscloud-config>.title[data-v-3af1f63b]{font-weight:700;padding:4px 0}.ionoscloud-config>.loading[data-v-3af1f63b]{margin-left:20px;display:flex;align-items:center}.ionoscloud-config>.loading>i[data-v-3af1f63b]{margin-right:4px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[(_vm.$fetchState.pending)?_c('Loading',{attrs:{\"delayed\":true}}):_vm._e(),(_vm.errors.length)?_c('div',_vm._l((_vm.errors),function(err,idx){return _c('div',{key:idx},[_c('Banner',{attrs:{\"color\":\"error\",\"label\":_vm.stringify(err)}})],1)}),0):_vm._e(),_c('div',[_vm._m(0),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"Location\",\"options\":_vm.location.options,\"loading\":_vm.location.busy,\"searchable\":false},model:{value:(_vm.location.selected),callback:function ($$v) {_vm.$set(_vm.location, \"selected\", $$v)},expression:\"location.selected\"}})],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"ServerType\",\"options\":_vm.serverType.options,\"loading\":_vm.serverType.busy,\"searchable\":false},model:{value:(_vm.serverType.selected),callback:function ($$v) {_vm.$set(_vm.serverType, \"selected\", $$v)},expression:\"serverType.selected\"}})],1),(_vm.serverType.selected.value === 'ENTERPRISE')?_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"serverAvailabilityZone\",\"options\":_vm.serverAvailabilityZone.options,\"loading\":_vm.serverAvailabilityZone.busy,\"searchable\":false},model:{value:(_vm.serverAvailabilityZone.selected),callback:function ($$v) {_vm.$set(_vm.serverAvailabilityZone, \"selected\", $$v)},expression:\"serverAvailabilityZone.selected\"}})],1):_vm._e(),(_vm.serverType.selected.value === 'ENTERPRISE')?_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"volumeAvailabilityZone\",\"options\":_vm.volumeAvailabilityZone.options,\"loading\":_vm.volumeAvailabilityZone.busy,\"searchable\":false},model:{value:(_vm.volumeAvailabilityZone.selected),callback:function ($$v) {_vm.$set(_vm.volumeAvailabilityZone, \"selected\", $$v)},expression:\"volumeAvailabilityZone.selected\"}})],1):_vm._e(),(_vm.serverType.selected.value === 'CUBE')?_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"CUBE Server Template\",\"options\":_vm.template.options,\"loading\":_vm.template.busy,\"searchable\":false},model:{value:(_vm.template.selected),callback:function ($$v) {_vm.$set(_vm.template, \"selected\", $$v)},expression:\"template.selected\"}})],1):_vm._e()]),(_vm.serverType.selected.value === 'ENTERPRISE')?_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"CpuFamily\",\"options\":_vm.cpuFamily.options,\"loading\":_vm.cpuFamily.busy,\"searchable\":false},model:{value:(_vm.cpuFamily.selected),callback:function ($$v) {_vm.$set(_vm.cpuFamily, \"selected\", $$v)},expression:\"cpuFamily.selected\"}})],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"required\":true,\"label\":\"CPU Core Count\"},model:{value:(_vm.cores),callback:function ($$v) {_vm.cores=$$v},expression:\"cores\"}})],1),_c('div',{staticClass:\"col span-6\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"required\":true,\"label\":\"RAM size (in MiB)\"},model:{value:(_vm.ram),callback:function ($$v) {_vm.ram=$$v},expression:\"ram\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Must be a multiple of 256\")])],1)]):_vm._e(),(_vm.serverType.selected.value === 'ENTERPRISE')?_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-6\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"required\":true,\"label\":\"Disk size (in GB)\"},model:{value:(_vm.diskSize),callback:function ($$v) {_vm.diskSize=$$v},expression:\"diskSize\"}})],1),_c('div',{staticClass:\"col span-6\"},[_c('LabeledSelect',{attrs:{\"label\":\"DiskType\",\"options\":_vm.diskType.options,\"loading\":_vm.diskType.busy,\"searchable\":false,\"required\":true},model:{value:(_vm.diskType.selected),callback:function ($$v) {_vm.$set(_vm.diskType, \"selected\", $$v)},expression:\"diskType.selected\"}})],1)]):_vm._e(),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-6\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"required\":true,\"label\":\"Image Alias or ID\"},model:{value:(_vm.image),callback:function ($$v) {_vm.image=$$v},expression:\"image\"}}),_vm._m(1)],1),_c('div',{staticClass:\"col span-6\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"required\":true,\"label\":\"Image Password\",\"type\":\"password\"},model:{value:(_vm.imagePassword),callback:function ($$v) {_vm.imagePassword=$$v},expression:\"imagePassword\"}})],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-12\"},[_c('label',{staticClass:\"acc-label\"},[_vm._v(\"Cloud init configuration.\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cloudInit),expression:\"cloudInit\"}],attrs:{\"disabled\":_vm.busy || _vm.mode === _vm._VIEW},domProps:{\"value\":(_vm.cloudInit)},on:{\"input\":function($event){if($event.target.composing)return;_vm.cloudInit=$event.target.value}}}),_vm._m(2)])]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"SSH User\"},model:{value:(_vm.sshUser),callback:function ($$v) {_vm.sshUser=$$v},expression:\"sshUser\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. User to connect to via SSH.\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('Checkbox',{attrs:{\"label\":\"Send SSH in user data.\",\"mode\":_vm.mode,\"disabled\":_vm.busy},model:{value:(_vm.sshInCloudInit),callback:function ($$v) {_vm.sshInCloudInit=$$v},expression:\"sshInCloudInit\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Should the driver only add the SSH info in the user data? (required for custom images).\")])],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"Datacenter ID\"},model:{value:(_vm.datacenterId),callback:function ($$v) {_vm.datacenterId=$$v},expression:\"datacenterId\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional, UUID-4 format. If you want to use an existing IONOS Datacenter to host this VM, you can provide its ID here.\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"Datacenter Name\"},model:{value:(_vm.datacenterName),callback:function ($$v) {_vm.datacenterName=$$v},expression:\"datacenterName\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. If you want to use an existing IONOS Datacenter to host this VM, you can change the name here. Please note that if the ID is set it will the prioritized.\")])],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"LAN ID\"},model:{value:(_vm.lanId),callback:function ($$v) {_vm.lanId=$$v},expression:\"lanId\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional, integer. The LAN the VM will attach to. If blank, a default LAN will be created. Overrides \\\"Private LAN\\\" setting.\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"LAN Name\"},model:{value:(_vm.lanName),callback:function ($$v) {_vm.lanName=$$v},expression:\"lanName\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. If you want to use an existing IONOS LAN, you can change the name here. Please note that if the ID is set it will the prioritized.\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('Checkbox',{attrs:{\"label\":\"Make Default LAN Private\",\"mode\":_vm.mode,\"disabled\":_vm.busy},model:{value:(_vm.privateLan),callback:function ($$v) {_vm.privateLan=$$v},expression:\"privateLan\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"If the default LAN does not exist, create a private LAN\")])],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('StringList',{attrs:{\"label\":\"Additional LANs\",\"items\":_vm.additionalLans,\"mode\":_vm.mode,\"disabled\":_vm.busy},on:{\"change\":function($event){return _vm.onChangeAdditionalLans($event)}},model:{value:(_vm.additionalLans),callback:function ($$v) {_vm.additionalLans=$$v},expression:\"additionalLans\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. Exiting Ionos LAN names. Every LAN in the datacenter which has its name in this list will be connected to the server, names which are not found will be ignored.\")])],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('Checkbox',{attrs:{\"label\":\"NIC DHCP\",\"mode\":_vm.mode,\"disabled\":_vm.busy},model:{value:(_vm.nicDhcp),callback:function ($$v) {_vm.nicDhcp=$$v},expression:\"nicDhcp\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Set whether the created NIC should have dhcp set on or off\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('StringList',{attrs:{\"label\":\"NIC Ips\",\"items\":_vm.nicIps,\"mode\":_vm.mode,\"disabled\":_vm.busy},on:{\"change\":function($event){return _vm.onChangeNicIps($event)}},model:{value:(_vm.nicIps),callback:function ($$v) {_vm.nicIps=$$v},expression:\"nicIps\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. IPBlock reserved IPs. If not set, the driver will reserve an IPBlock automatically or let the API set a private IP if the LAN is private\")])],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('Checkbox',{attrs:{\"label\":\"Wait for NIC IP change\",\"mode\":_vm.mode,\"disabled\":_vm.busy},model:{value:(_vm.waitForIpChange),callback:function ($$v) {_vm.waitForIpChange=$$v},expression:\"waitForIpChange\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Should the driver wait for the NIC IP to be set by external sources?\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"Wait for IP change timeout\"},model:{value:(_vm.waitForIpChangeTimeout),callback:function ($$v) {_vm.waitForIpChangeTimeout=$$v},expression:\"waitForIpChangeTimeout\"}})],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway ID\"},model:{value:(_vm.natId),callback:function ($$v) {_vm.natId=$$v},expression:\"natId\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional, UUID-4 format. Use a preconfigured NAT Gateway. Datacenter ID and Private LAN required. Overrides NAT Config below\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Name\"},model:{value:(_vm.natName),callback:function ($$v) {_vm.natName=$$v},expression:\"natName\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. If the \\\"Create NAT\\\" checkbox is checked, will try creating a NAT with this name. If one already exists, will use the existing NAT.\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('Checkbox',{attrs:{\"label\":\"Create a configurable NAT\",\"mode\":_vm.mode,\"disabled\":_vm.busy},model:{value:(_vm.createNat),callback:function ($$v) {_vm.createNat=$$v},expression:\"createNat\"}}),_vm._m(3)],1)]),(_vm.createNat === true)?_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-4\"},[_c('StringList',{attrs:{\"label\":\"Custom NAT: map LANs to Gateway IPs\",\"items\":_vm.natLansToGateways,\"mode\":_vm.mode,\"disabled\":_vm.busy},on:{\"change\":function($event){return _vm.onChangeNatLansToGateways($event)}},model:{value:(_vm.natLansToGateways),callback:function ($$v) {_vm.natLansToGateways=$$v},expression:\"natLansToGateways\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. Maps Lan IDs to a specific Gateway IP. Gateway IP must be set manually as default route.\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('StringList',{attrs:{\"label\":\"Custom NAT: Public IPs\",\"items\":_vm.natPublicIps,\"mode\":_vm.mode,\"disabled\":_vm.busy},on:{\"change\":function($event){return _vm.onChangeNatPublicIps($event)}},model:{value:(_vm.natPublicIps),callback:function ($$v) {_vm.natPublicIps=$$v},expression:\"natPublicIps\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. IPBlock reserved IPs. If not set, the driver will reserve an IPBlock automatically\")])],1),_c('div',{staticClass:\"col span-4\"},[_c('StringList',{attrs:{\"label\":\"Custom NAT: Flowlogs\",\"items\":_vm.natFlowlogs,\"mode\":_vm.mode,\"disabled\":_vm.busy},on:{\"change\":function($event){return _vm.onChangeNatFlowlogs($event)}},model:{value:(_vm.natFlowlogs),callback:function ($$v) {_vm.natFlowlogs=$$v},expression:\"natFlowlogs\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. NAT Flowlogs.\")])],1)]):_vm._e(),(_vm.createNat === true)?_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-6\"},[_c('StringList',{attrs:{\"label\":\"Custom NAT: Rules\",\"items\":_vm.natRules,\"mode\":_vm.mode,\"disabled\":_vm.busy},on:{\"change\":function($event){return _vm.onChangeNatRules($event)}},model:{value:(_vm.natRules),callback:function ($$v) {_vm.natRules=$$v},expression:\"natRules\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. NAT Rules. Use the form bellow to add a new NAT rule\")])],1)]):_vm._e(),(_vm.createNat)?_c('div',{staticClass:\"card-container create-nat\"},[_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Name\"},model:{value:(_vm.natRuleName),callback:function ($$v) {_vm.natRuleName=$$v},expression:\"natRuleName\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. The name of the new Nat Gateway Rule.\")])],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Type\"},model:{value:(_vm.natRuleType),callback:function ($$v) {_vm.natRuleType=$$v},expression:\"natRuleType\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. The type of the new Nat Gateway Rule.\")])],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledSelect',{attrs:{\"label\":\"natRuleProtocol\",\"options\":_vm.natRuleProtocol.options,\"loading\":_vm.natRuleProtocol.busy,\"searchable\":false},model:{value:(_vm.natRuleProtocol.selected),callback:function ($$v) {_vm.$set(_vm.natRuleProtocol, \"selected\", $$v)},expression:\"natRuleProtocol.selected\"}})],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Public IP\"},model:{value:(_vm.natRulePublicIp),callback:function ($$v) {_vm.natRulePublicIp=$$v},expression:\"natRulePublicIp\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. The Public IP of the new Nat Gateway Rule, leave black and the driver will use the nat gateway IP.\")])],1)]),_c('div',{staticClass:\"row mt-10\"},[_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Source Subnet\"},model:{value:(_vm.natRuleSourceSubnet),callback:function ($$v) {_vm.natRuleSourceSubnet=$$v},expression:\"natRuleSourceSubnet\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. The Source Subnet of the new Nat Gateway Rule, leave black and the driver will use the first ip on the nic with mask 24.\")])],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Target Subnet\"},model:{value:(_vm.natRuleTargetSubnet),callback:function ($$v) {_vm.natRuleTargetSubnet=$$v},expression:\"natRuleTargetSubnet\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"String. The Target Subnet of the new Nat Gateway Rule.\")])],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Port Range Start\"},model:{value:(_vm.natRuleTargetPortRangeStart),callback:function ($$v) {_vm.natRuleTargetPortRangeStart=$$v},expression:\"natRuleTargetPortRangeStart\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Integer. The Port Range Start of the new Nat Gateway Rule.\")])],1),_c('div',{staticClass:\"col span-3\"},[_c('LabeledInput',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.busy,\"label\":\"IONOS Nat Gateway Rule Port Range End\"},model:{value:(_vm.natRuleTargetPortRangeEnd),callback:function ($$v) {_vm.natRuleTargetPortRangeEnd=$$v},expression:\"natRuleTargetPortRangeEnd\"}}),_c('p',{staticClass:\"help-block\"},[_vm._v(\"Integer. The Port Range End of the new Nat Gateway Rule.\")])],1)]),_c('div',{staticClass:\"mt-10\"},[_c('button',{on:{\"click\":function($event){return _vm.addNatRule()}}},[_vm._v(\" Add NAT Gateway Rule + \")])])]):_vm._e()])],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"ionoscloud-config\"},[_c('div',{staticClass:\"title\"},[_vm._v(\" ionoscloud Configuration \")])])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',{staticClass:\"help-block\"},[_vm._v(\"You can use \"),_c('a',{attrs:{\"href\":\"https://docs.ionos.com/cli-ionosctl\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"ionosctl image list [-F name=operatingSystem]\")])])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',{staticClass:\"help-block\"},[_vm._v(\"Optional. \"),_c('a',{attrs:{\"href\":\"https://cloudinit.readthedocs.io/en/latest/topics/examples.html\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Cloud-init Documentation\")]),_vm._v(\".\")])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',{staticClass:\"help-block\"},[_vm._v(\"Requires private LAN. You can override settings of this NAT using the form below \"),_c('a',{attrs:{\"href\":\"#\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"See open ports here\")]),_vm._v(\". Must set gateway IP as default route via cloud config, default: 10.0.0.1\")])\n}]\n\nexport { render, staticRenderFns }","<script>\nimport { defineComponent } from 'vue';\n\nimport Loading from '@shell/components/Loading';\nimport { Banner } from '@components/Banner';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { NORMAN, SECRET } from '@shell/config/types';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { StringList } from '@components/StringList';\nimport { stringify } from '@shell/utils/error';\nimport { _VIEW } from '@shell/config/query-params';\nimport * as Ionos from '@ionos-cloud/sdk-nodejs/';\n\nimport { LabeledTooltip } from '@rancher/components';\n\nconst LOCATION_SELECT_OPTIONS = [\n  {\n    label: 'frankfurt',\n    value: {'value': 'de/fra', 'name': 'frankfurt'}\n  },\n  {\n    label: 'berlin',\n    value: {'value': 'de/txl', 'name': 'berlin'}\n  },\n  {\n    label: 'logrono',\n    value: {'value': 'es/vit', 'name': 'logrono'}\n  },\n  {\n    label: 'paris',\n    value: {'value': 'fr/par', 'name': 'paris'}\n  },\n  {\n    label: 'worcester',\n    value: {'value': 'gb/bhx', 'name': 'worcester'}\n  },\n  {\n    label: 'london',\n    value: {'value': 'gb/lhr', 'name': 'london'}\n  },\n  {\n    label: 'newark',\n    value: {'value': 'us/ewr', 'name': 'newark'}\n  },\n  {\n    label: 'lasvegas',\n    value: {'value': 'us/las', 'name': 'lasvegas'}\n  },\n  {\n    label: 'lenexa',\n    value: {'value': 'us/mci', 'name': 'lenexa'}\n  },\n]\nconst SERVER_TYPE_SELECT_OPTIONS = [\n  {\n    label: 'Enterprise',\n    value: {'value': 'ENTERPRISE', 'name': 'Enterprise'}\n  },\n  {\n    label:'Cube',\n    value: {'value': 'CUBE', 'name':'Cube'}\n  },\n]\nconst CPU_FAMILY_SELECT_OPTIONS = [\n  {\n    label: 'INTEL_XEON',\n    value: {'value': 'INTEL_XEON', 'name': 'INTEL_XEON'}\n  },\n  {\n    label: 'INTEL_SKYLAKE',\n    value: {'value': 'INTEL_SKYLAKE', 'name': 'INTEL_SKYLAKE'}\n  },\n  {\n    label: 'INTEL_ICELAKE',\n    value: {'value': 'INTEL_ICELAKE', 'name': 'INTEL_ICELAKE'}\n  },\n  {\n    label: 'AMD_EPYC',\n    value: {'value': 'AMD_EPYC', 'name': 'AMD_EPYC'}\n  },\n]\nconst SERVER_AVAILABILITY_ZONE_SELECT_OPTIONS = [\n  {\n    label: 'AUTO',\n    value: {'value': 'AUTO', 'name': 'AUTO'}\n  },\n  {\n    label:'ZONE_1',\n    value: {'value': 'ZONE_1', 'name':'ZONE_1'}\n  },\n  {\n    label:'ZONE_2',\n    value: {'value': 'ZONE_2', 'name':'ZONE_2'}\n  },\n]\nconst VOLUME_AVAILABILITY_ZONE_SELECT_OPTIONS = [\n  {\n    label: 'AUTO',\n    value: {'value': 'AUTO', 'name': 'AUTO'}\n  },\n  {\n    label:'ZONE_1',\n    value: {'value': 'ZONE_1', 'name':'ZONE_1'}\n  },\n  {\n    label:'ZONE_2',\n    value: {'value': 'ZONE_2', 'name':'ZONE_2'}\n  },\n  {\n    label:'ZONE_3',\n    value: {'value': 'ZONE_3', 'name':'ZONE_3'}\n  },\n]\nconst TEMPLATE_SELECT_OPTIONS = [\n  {\n    label: 'Basic Cube L',\n    value: {'value': 'Basic Cube L', 'name': 'Basic Cube L'}\n  },\n  {\n    label: 'Basic Cube M',\n    value: {'value': 'Basic Cube M', 'name': 'Basic Cube M'}\n  },\n  {\n    label: 'Basic Cube S',\n    value: {'value': 'Basic Cube S', 'name': 'Basic Cube S'}\n  },\n  {\n    label: 'Basic Cube XL',\n    value: {'value': 'Basic Cube XL', 'name': 'Basic Cube XL'}\n  },\n  {\n    label: 'Basic Cube XS',\n    value: {'value': 'Basic Cube XS', 'name': 'Basic Cube XS'}\n  },\n  {\n    label: 'Memory Cube L',\n    value: {'value': 'Memory Cube L', 'name': 'Memory Cube L'}\n  },\n  {\n    label: 'Memory Cube L',\n    value: {'value': 'Memory Cube L', 'name': 'Memory Cube L'}\n  },\n  {\n    label: 'Memory Cube M',\n    value: {'value': 'Memory Cube M', 'name': 'Memory Cube M'}\n  },\n  {\n    label: 'Memory Cube S',\n    value: {'value': 'Memory Cube S', 'name': 'Memory Cube S'}\n  },\n  {\n    label: 'Memory Cube XL',\n    value: {'value': 'Memory Cube XL', 'name': 'Memory Cube XL'}\n  },\n]\nconst DISK_TYPE_SELECT_OPTIONS = [\n  {\n    label: 'HDD',\n    value: {'value': 'HDD', 'name': 'HDD'}\n  },\n  {\n    label: 'SSD',\n    value: {'value': 'SSD', 'name': 'SSD'}\n  },\n  {\n    label: 'SSD Standard',\n    value: {'value': 'SSD Standard', 'name': 'SSD Standard'}\n  },\n  {\n    label: 'SSD Premium',\n    value: {'value': 'SSD Premium', 'name': 'SSD Premium'}\n  },\n  {\n    label: 'DAS',\n    value: {'value': 'DAS', 'name': 'DAS'}\n  },\n  {\n    label: 'ISO',\n    value: {'value': 'ISO', 'name': 'ISO'}\n  },\n]\n\nfunction initSelect(initialValue, defaultSelectOptions, apiSelectOptions) {\n  let usedSelectOptions = apiSelectOptions || defaultSelectOptions\n  let usedInitialValue = initialValue || usedSelectOptions[0].value.value\n\n  let selected_option = usedSelectOptions[0].value\n  let found = false\n\n  usedSelectOptions.forEach(element => {\n    if (element.value.value == usedInitialValue) {\n      selected_option = element.value\n      found = true\n    }\n  })\n  \n  if (!found) {\n    let newElem = {\n      label: usedInitialValue,\n      value: {'value': usedInitialValue, 'name': usedInitialValue}\n    }\n    usedSelectOptions.push(newElem)\n    selected_option = newElem.value\n  }\n  \n  return {\n    options: usedSelectOptions,\n    selected: selected_option,\n    busy:     false,\n    enabled:  false,\n  };\n}\n\nfunction initNatRuleProtocol() {\n  let select_options = [\n    {\n      label: 'ALL',\n      value: {'value': 'ALL', 'name': 'ALL'}\n    },\n    {\n      label: 'TCP',\n      value: {'value': 'TCP', 'name': 'TCP'}\n    },\n    {\n      label: 'UDP',\n      value: {'value': 'UDP', 'name': 'UDP'}\n    },\n    {\n      label: 'ICMP',\n      value: {'value': 'ICMP', 'name': 'ICMP'}\n    },\n  ]\n  \n  return {\n    options: select_options,\n    selected: select_options[0].value,\n    busy:     false,\n    enabled:  false,\n  };\n}\n\nfunction validateIp(ip) {\n  if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ip)) {\n    return true;\n  }\n  return false;\n}\n\nfunction validateSubnet(subnet) {\n  let splitSubnet = subnet.split('/')\n  return (splitSubnet.length == 2 && validateIp(splitSubnet[0]) && !(Number.isNaN(parseInt(splitSubnet[1]))));\n}\n\n\nexport default defineComponent({\n  components: {\n    Banner,\n    Loading,\n    Checkbox,\n    StringList,\n    LabeledInput,\n    LabeledSelect,\n    LabeledTooltip\n},\n\n  mixins: [CreateEditView],\n\n  props: {\n    uuid: {\n      type:     String,\n      required: true,\n    },\n\n    cluster: {\n      type:    Object,\n      default: () => ({})\n    },\n\n    credentialId: {\n      type:     String,\n      required: true,\n    },\n\n    disabled: {\n      type:    Boolean,\n      default: false\n    },\n\n    busy: {\n      type:    Boolean,\n      default: false\n    },\n\n    provider: {\n      type:     String,\n      required: true,\n    }\n  },\n\n  async fetch() {\n    this.errors = [];\n    if ( !this.credentialId ) {\n      return;\n    }\n\n    if (this.mode === _VIEW) {\n      this.initForViewMode();\n\n      return;\n    }\n\n    try {\n      this.credential = await this.$store.dispatch('rancher/find', { type: NORMAN.CLOUD_CREDENTIAL, id: this.credentialId });\n    } catch (e) {\n      this.credential = null;\n    }\n\n    // Try and get the secret for the Cloud Credential as we need the plain-text password\n    try {\n      const id = this.credentialId.replace(':', '/');\n      const secret = await this.$store.dispatch('management/find', { type: SECRET, id });\n      let data = secret.data['ionoscloudcredentialConfig-password'];\n      const password = atob(data);\n      data = secret.data['ionoscloudcredentialConfig-token'];\n      const token = atob(data);\n      data = secret.data['ionoscloudcredentialConfig-username'];\n      const username = atob(data);\n      data = secret.data['ionoscloudcredentialConfig-endpoint'];\n      const endpoint = atob(data);\n\n      let authConfig = {\n        basePath: endpoint\n      };\n\n      if (token != undefined) {\n        authConfig.apiKey = token;\n      } else if (username != undefined && password != undefined) {\n        authConfig.username = username;\n        authConfig.password = password;\n      }\n      // setup authorization\n      const config = new Ionos.Configuration(authConfig);\n      const locationsApi = new Ionos.LocationsApi(config)\n      const templatesApi = new Ionos.TemplatesApi(config)\n\n      let locationResponse = locationsApi.locationsGet({depth: 1})\n\n      let templateResponse = await templatesApi.templatesGet({depth: 1})\n      if (templateResponse && templateResponse.status === 200) {\n        let templateSelectOptions = [];\n        templateResponse.data.items.forEach((element) => {\n          templateSelectOptions.push({\n            label: element.properties.name,\n            value: {'value': element.properties.name, 'name': element.properties.name}\n          });\n        });\n\n        this.$set(this, 'template', initSelect(\n          this.value?.template,\n          TEMPLATE_SELECT_OPTIONS,\n          templateSelectOptions.sort((a, b) => a.value.value.localeCompare(b.value.value)),\n        ))\n      }\n\n      locationResponse = await locationResponse\n      if (locationResponse && locationResponse.status === 200) {\n        let locationSelectOptions = [];\n        let cpuFamilies = new Set();\n        let cpuFamilySelectOptions = [];\n        locationResponse.data.items.forEach((element) => {\n          locationSelectOptions.push({\n            label: element.properties.name,\n            value: {'value': element.id, 'name': element.properties.name}\n          });\n          if (element.properties.cpuArchitecture) {\n            element.properties.cpuArchitecture.forEach((element) => {\n              cpuFamilies.add(element.cpuFamily)\n            })\n          }\n        });\n        cpuFamilies.forEach((element) => cpuFamilySelectOptions.push({\n          label: element,\n          value: {'value': element, 'name': element}\n        }))\n\n        this.$set(this, 'location', initSelect(\n          this.value?.location,\n          LOCATION_SELECT_OPTIONS,\n          locationSelectOptions.sort((a, b) => a.value.value.localeCompare(b.value.value)),\n        ))\n        this.$set(this, 'cpuFamily', initSelect(\n          this.value?.cpuFamily,\n          CPU_FAMILY_SELECT_OPTIONS,\n          cpuFamilySelectOptions.sort((a, b) => a.value.value.localeCompare(b.value.value)),\n        ))\n      }\n    } catch (e) {\n      console.error(e); // eslint-disable-line no-console\n    }\n\n    this.$set(this, 'authenticating', true);\n    this.$emit('validationChanged', true);\n  },\n\n  data() {\n    const defaultNatRules = [\n      'rule01:SNAT:TCP::::22:22',\n      'rule02:SNAT:UDP::::53:53',\n      'rule03:SNAT:TCP::::80:80',\n      'rule04:SNAT:TCP::::179:179',\n      'rule05:SNAT:TCP::::443:443',\n      'rule06:SNAT:TCP::::2376:2376',\n      'rule07:SNAT:UDP::::4789:4789',\n      'rule08:SNAT:TCP::::6443:6443',\n      'rule09:SNAT:TCP::::6783:6783',\n      'rule10:SNAT:TCP::::8443:8443',\n      'rule11:SNAT:UDP::::8472:8472',\n      'rule12:SNAT:TCP::::9099:9099',\n      'rule13:SNAT:TCP::::9100:9100',\n      'rule14:SNAT:TCP::::9443:9443',\n      'rule15:SNAT:TCP::::9796:9796',\n      'rule16:SNAT:TCP::::10254:10254',\n      'rule17:SNAT:TCP::::10256:10256',\n      'rule18:SNAT:TCP::::2379:2380',\n      'rule19:SNAT:UDP::::6783:6784',\n      'rule20:SNAT:TCP::::10250:10252',\n      'rule21:SNAT:TCP::::30000:32767',\n      'rule22:SNAT:UDP::::30000:32767',\n      'rule23:SNAT:ALL:::::',\n    ]\n    return {\n      authenticating:              false,\n      ready:                       false,\n      os:                          null,\n      password:                    null,\n      havePassword:                false,\n      location:                    initSelect(this.value?.location, LOCATION_SELECT_OPTIONS, null),\n      serverType:                  initSelect(this.value?.serverType || 'ENTERPRISE', SERVER_TYPE_SELECT_OPTIONS, null),\n      template:                    initSelect(this.value?.template, TEMPLATE_SELECT_OPTIONS, null),\n      serverAvailabilityZone:      initSelect(this.value?.serverAvailabilityZone || 'AUTO', SERVER_AVAILABILITY_ZONE_SELECT_OPTIONS, null),\n      volumeAvailabilityZone:      initSelect(this.value?.volumeAvailabilityZone || 'AUTO', VOLUME_AVAILABILITY_ZONE_SELECT_OPTIONS, null),\n      cpuFamily:                   initSelect(this.value?.cpuFamily, CPU_FAMILY_SELECT_OPTIONS, null),\n      diskType:                    initSelect(this.value?.diskType || 'HDD', DISK_TYPE_SELECT_OPTIONS, null),\n      cores:                       this.value?.cores || '2',\n      ram:                         this.value?.ram || '2048',\n      diskSize:                    this.value?.diskSize || '50',\n      image:                       this.value?.image || 'ubuntu:20.04',\n      imagePassword:               this.value?.imagePassword,\n      cloudInit:                   this.value?.cloudInit,\n      sshUser:                     this.value?.sshUser || 'root',\n      sshInCloudInit:              this.value?.sshInCloudInit || false,\n      datacenterId:                this.value?.datacenterId,\n      datacenterName:              this.value?.datacenterName || 'docker-machine-data-center',\n      lanId:                       this.value?.lanId,\n      lanName:                     this.value?.lanName || 'docker-machine-lan',\n      privateLan:                  this.value?.privateLan || false,\n      nicDhcp:                     this.value?.nicDhcp || false,\n      nicIps:                      this.value?.nicIps || [],\n      additionalLans:              this.value?.additionalLans || [],\n      waitForIpChange:             this.value?.waitForIpChange || false,\n      waitForIpChangeTimeout:      this.value?.waitForIpChangeTimeout || '600',\n      natId:                       this.value?.natId,\n      natName:                     this.value?.natName || 'docker-machine-nat',\n      createNat:                   this.value?.createNat || false,\n      natLansToGateways:           this.getNatLansToGateways(this.value?.natLansToGateways) || [],\n      natFlowlogs:                 this.value?.natFlowlogs || [],\n      natPublicIps:                this.value?.natPublicIps || [],\n      natRules:                    this.mode == 'create' ? defaultNatRules : this.value?.natRules || [],\n      natRuleName:                 '',\n      natRuleType:                 'SNAT',\n      natRuleProtocol:             initNatRuleProtocol(),\n      natRuleSourceSubnet:         '',\n      natRulePublicIp:             '',\n      natRuleTargetSubnet:         '',\n      natRuleTargetPortRangeStart: '',\n      natRuleTargetPortRangeEnd:   '',\n      errors:                      null,\n    };\n  },\n\n  watch: {\n    'credentialId'() {\n      this.$fetch();\n    },\n  },\n\n  methods: {\n    stringify,\n\n    initForViewMode() {\n      this.fakeSelectOptions(this.Location, this.value?.location);\n      this.fakeSelectOptions(this.ServerType, this.value?.serverType);\n      this.fakeSelectOptions(this.serverAvailabilityZone, this.value?.serverAvailabilityZone);\n      this.fakeSelectOptions(this.volumeAvailabilityZone, this.value?.volumeAvailabilityZone);\n      this.fakeSelectOptions(this.CpuFamily, this.value?.cpuFamily);\n      this.fakeSelectOptions(this.DiskType, this.value?.diskType);\n    },\n\n    fakeSelectOptions(list, value) {\n      list.busy = false;\n      list.enabled = false;\n      list.options = [];\n\n      if (value) {\n        list.options.push({\n          label: value,\n          value,\n        });\n      }\n\n      list.selected = value;\n    },\n\n    onChangeNicIps(event) {\n      for (let ip of event) {\n        if (!validateIp(ip)) {\n          alert('Invalid IP detected: ' + ip );\n          return;\n        }\n      }\n\n      this.nicIps = event;\n    },\n\n    onChangeAdditionalLans(event) {\n      this.additionalLans = event;\n    },\n\n    onChangeNatPublicIps(event) {\n      for (let ip of event) {\n        if (!validateIp(ip)) {\n          alert('Invalid IP detected: ' + ip );\n          return;\n        }\n      }\n\n      this.natPublicIps = event;\n    },\n\n    onChangeNatLansToGateways(event) {\n\n      for (let el of event) {\n        let spl = el.split(':')\n        if (spl.length != 2) {\n          alert('Invalid entry detected: ' + el + '. The accepted format is LanId:IP!');\n          return;\n        }\n        let lanId = spl[0]\n        if (Number.isNaN(parseInt(lanId))) {\n          alert('Invalid LAN ID detected: ' + lanId );\n          return;\n        }\n\n        let ip = spl[1]\n        if (!validateIp(ip)) {\n          alert('Invalid IP detected: ' + ip );\n          return;\n        }\n      }\n\n      this.natLansToGateways = event.sort();\n    },\n    onChangeNatFlowlogs(event) {\n\n      for (let el of event) {\n        let spl = el.split(':')\n        if (spl.length != 4) {\n          alert('Invalid entry detected: ' + el + '. The accepted format is name:action:direction:bucket!');\n          return;\n        }\n        let action = spl[1]\n        if (!['ACCEPTED', 'REJECTED', 'ALL'].includes(action)) {\n          alert('Invalid action: ' + action + '. Must be one of [\\'ACCEPTED\\', \\'REJECTED\\', \\'ALL\\']');\n          return;\n        }\n\n        let direction = spl[2]\n        if (!['INGRESS', 'EGRESS', 'BIDIRECTIONAL'].includes(direction)) {\n          alert('Invalid direction: ' + direction + '. Must be one of [\\'INGRESS\\', \\'EGRESS\\', \\'BIDIRECTIONAL\\']');\n          return;\n        }\n      }\n\n      this.natFlowlogs = event.sort();\n    },\n\n    checkNatRule(rule) {\n      let splitRule = rule.split(':') \n      if (splitRule.length != 8) {\n        alert('Invalid entry detected: ' + rule + '. The accepted format is ' +\n        'name:type:protocol:public_ip:source_subnet:target_subnet:target_port_range_start:target_port_range_end!');\n        return false;\n      }\n      if (!['SNAT'].includes(splitRule[1])) {\n        alert('Invalid rule type: ' + splitRule[1] + '. Must be one of [\\'SNAT\\']');\n        return false;\n      }\n      if (!['TCP', 'UDP', 'ICMP', 'ALL'].includes(splitRule[2])) {\n        alert('Invalid rule protocol: ' + splitRule[2] + '. Must be one of [\\'TCP\\', \\'UDP\\', \\'ICMP\\', \\'ALL\\']');\n        return false;\n      }\n      if (splitRule[3] && !validateIp(splitRule[3])) {\n        alert('Invalid IP detected: ' + splitRule[3] );\n        return false;\n      }\n      if (splitRule[4] && !validateSubnet(splitRule[4])) {\n        alert('Invalid Subnet detected: ' + splitRule[4] );\n        return false;\n      }\n      if (splitRule[5] && !validateSubnet(splitRule[5])) {\n        alert('Invalid Subnet detected: ' + splitRule[5] );\n        return false;\n      }\n      if (splitRule[6] && (!Number.isInteger(Number(splitRule[6])) || Number(splitRule[6]) < 0)) {\n        alert('Invalid Port detected: ' + splitRule[6] );\n        return false;\n      }\n      if (splitRule[7] && (!Number.isInteger(Number(splitRule[7])) || Number(splitRule[7]) < 0)) {\n        alert('Invalid Port detected: ' + splitRule[7] );\n        return false;\n      }\n\n      return true;\n    },\n\n    onChangeNatRules(event) {\n      for (let rule of event) {\n        if (!this.checkNatRule(rule)) {\n          return false;\n        }\n      }\n      this.natRules = event.sort();\n    },\n\n    addNatRule() {\n      let rule = [\n        this.natRuleName, this.natRuleType, this.natRuleProtocol.selected.value, this.natRulePublicIp, this.natRuleSourceSubnet,\n        this.natRuleTargetSubnet, this.natRuleTargetPortRangeStart, this.natRuleTargetPortRangeEnd\n      ].join(':')\n      if (this.natRules.includes(rule)) {\n        alert('Rule is already in list!');\n        return;\n      }\n      if (this.checkNatRule(rule)) {\n        this.natRules.push(rule)\n      }\n    },\n\n    onPrivateKeyFileSelected(v) {\n      this.filename = v.file.name;\n      this.privateKeyFile = v.data;\n\n      // On initial load, filename is shown as a password as we don't know what the filename was that was used - we just want to indicate there is a vlue\n      // When a file is chosen, change the type to text, so that the user can see the filename of the file that they chose\n      this.privateKeyFieldType = 'text';\n\n      this.$emit('validationChanged', true);\n    },\n\n    // Sets `value.natLansToGateways` to a map of LANs to Gateways interpretable by Docker Machine Driver: like 1=10.0.0.1,10.0.0.2:2=10.0.0.10\n    formatNatLansToGateways() {\n      let aux = {}\n      for (let el of this.natLansToGateways) {\n        let spl = el.split(':')\n        let lanId = spl[0], ip = spl[1]\n\n        if (!aux.hasOwnProperty(lanId)) {\n          aux[lanId] = [ip]\n        } else {\n          aux[lanId].push(ip)\n        }\n      }\n\n      let formatedValues = []\n      for (let lanId in aux) {\n        formatedValues.push(`${lanId}=${aux[lanId].join(',')}`)\n      }\n\n      return formatedValues.join(':');\n    },\n\n    getNatLansToGateways(stringValue) {\n      if (!stringValue) {\n        return undefined\n      }\n\n      let arr = [], spl\n\n      for (let el of stringValue.split(':')) {\n        spl = el.split('=')\n        for (let ip of spl[1].split(',')) {\n          arr.push(`${spl[0]}:${ip}`)\n        }\n      }\n\n      return arr\n    },\n\n    syncValue() {\n      // Note: We don't need to provide password as this is picked up via the credential\n      // Copy the values from the form to the correct places on the value\n      this.value.location = this.location.selected?.value;\n      this.value.serverType = this.serverType.selected?.value;\n      this.value.serverAvailabilityZone = this.serverAvailabilityZone.selected?.value;\n      this.value.template = this.template.selected?.value;\n      this.value.volumeAvailabilityZone = this.volumeAvailabilityZone.selected?.value;\n      this.value.cpuFamily = this.cpuFamily.selected?.value;\n      this.value.diskType = this.diskType.selected?.value;\n      this.value.cores = this.cores;\n      this.value.ram = this.ram;\n      this.value.diskSize = this.diskSize;\n      this.value.image = this.image;\n      this.value.imagePassword = this.imagePassword;\n      this.value.cloudInit = this.cloudInit;\n      this.value.sshUser = this.sshUser;\n      this.value.sshInCloudInit = this.sshInCloudInit;\n      this.value.datacenterId = this.datacenterId;\n      this.value.datacenterName = this.datacenterName;\n      this.value.lanId = this.lanId;\n      this.value.lanName = this.lanName;\n      this.value.privateLan = this.privateLan;\n      this.value.nicDhcp = this.nicDhcp;\n      this.value.nicIps = this.nicIps;\n      this.value.additionalLans = this.additionalLans;\n      this.value.waitForIpChange = this.waitForIpChange;\n      this.value.waitForIpChangeTimeout = this.waitForIpChangeTimeout;\n      this.value.natId = this.natId;\n      this.value.natName = this.natName;\n      this.value.createNat = this.createNat;\n      this.value.natLansToGateways = this.formatNatLansToGateways();\n      this.value.natFlowlogs = this.natFlowlogs;\n      this.value.natPublicIps = this.natPublicIps;\n      this.value.natRules = this.natRules;\n      this.value.skipDefaultNatRules = true;\n    },\n\n    test() {\n      this.syncValue();\n    }\n  },\n});\n</script>\n\n<template>\n  <div>\n    <Loading\n      v-if=\"$fetchState.pending\"\n      :delayed=\"true\"\n    />\n    <div v-if=\"errors.length\">\n      <div\n        v-for=\"(err, idx) in errors\" :key=\"idx\">\n        <Banner\n          color=\"error\"\n          :label=\"stringify(err)\"\n        />\n      </div>\n    </div>\n    <div>\n      <div class=\"ionoscloud-config\">\n        <div class=\"title\">\n          ionoscloud Configuration\n        </div>\n      </div>\n      <div class=\"row mt-10\">\n        <div class=\"col span-3\">\n          <LabeledSelect\n            v-model:value=\"location.selected\"\n            label=\"Location\"\n            :options=\"location.options\"\n            :loading=\"location.busy\"\n            :searchable=\"false\"\n          />\n        </div>\n        <div class=\"col span-3\">\n          <LabeledSelect\n            v-model:value=\"serverType.selected\"\n            label=\"ServerType\"\n            :options=\"serverType.options\"\n            :loading=\"serverType.busy\"\n            :searchable=\"false\"\n          />\n        </div>\n        <div class=\"col span-3\" v-if=\"serverType.selected.value === 'ENTERPRISE'\">\n          <LabeledSelect\n            v-model:value=\"serverAvailabilityZone.selected\"\n            label=\"serverAvailabilityZone\"\n            :options=\"serverAvailabilityZone.options\"\n            :loading=\"serverAvailabilityZone.busy\"\n            :searchable=\"false\"\n          />\n        </div>\n        <div class=\"col span-3\" v-if=\"serverType.selected.value === 'ENTERPRISE'\">\n          <LabeledSelect\n            v-model:value=\"volumeAvailabilityZone.selected\"\n            label=\"volumeAvailabilityZone\"\n            :options=\"volumeAvailabilityZone.options\"\n            :loading=\"volumeAvailabilityZone.busy\"\n            :searchable=\"false\"\n          />\n        </div>\n        <div class=\"col span-3\" v-if=\"serverType.selected.value === 'CUBE'\">\n          <LabeledSelect\n            v-model:value=\"template.selected\"\n            label=\"CUBE Server Template\"\n            :options=\"template.options\"\n            :loading=\"template.busy\"\n            :searchable=\"false\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row mt-10\" v-if=\"serverType.selected.value === 'ENTERPRISE'\">\n        <div class=\"col span-3\">\n          <LabeledSelect\n            v-model:value=\"cpuFamily.selected\"\n            label=\"CpuFamily\"\n            :options=\"cpuFamily.options\"\n            :loading=\"cpuFamily.busy\"\n            :searchable=\"false\"\n          />\n        </div>\n        <div class=\"col span-3\">\n          <LabeledInput\n            v-model:value=\"cores\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            :required=\"true\"\n            label=\"CPU Core Count\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model:value=\"ram\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            :required=\"true\"\n            label=\"RAM size (in MiB)\"\n          />\n          <p class=\"help-block\">Must be a multiple of 256</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\" v-if=\"serverType.selected.value === 'ENTERPRISE'\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model:value=\"diskSize\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            :required=\"true\"\n            label=\"Disk size (in GB)\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledSelect\n            v-model:value=\"diskType.selected\"\n            label=\"DiskType\"\n            :options=\"diskType.options\"\n            :loading=\"diskType.busy\"\n            :searchable=\"false\"\n            :required=\"true\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model:value=\"image\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            :required=\"true\"\n            label=\"Image Alias or ID\"\n          />\n          <p class=\"help-block\">You can use <a href=\"https://docs.ionos.com/cli-ionosctl\" target=\"_blank\" rel=\"noopener noreferrer\">ionosctl image list [-F name=operatingSystem]</a></p>\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model:value=\"imagePassword\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            :required=\"true\"\n            label=\"Image Password\"\n            type=\"password\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-12\">\n          <label class=\"acc-label\">Cloud init configuration.</label>\n          <textarea\n            v-model=\"cloudInit\"\n            :disabled=\"busy || mode === _VIEW\"\n          ></textarea>\n          <p class=\"help-block\">Optional. <a href=\"https://cloudinit.readthedocs.io/en/latest/topics/examples.html\" target=\"_blank\" rel=\"noopener noreferrer\">Cloud-init Documentation</a>.</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model:value=\"sshUser\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"SSH User\"\n          />\n          <p class=\"help-block\">Optional. User to connect to via SSH.</p>\n        </div>\n        <div class=\"col span-4\">\n          <Checkbox\n            label=\"Send SSH in user data.\"\n            v-model:value=\"sshInCloudInit\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n          />\n          <p class=\"help-block\">Should the driver only add the SSH info in the user data? (required for custom images).</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model:value=\"datacenterId\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"Datacenter ID\"\n          />\n          <p class=\"help-block\">Optional, UUID-4 format. If you want to use an existing IONOS Datacenter to host this VM, you can provide its ID here.</p>\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model:value=\"datacenterName\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"Datacenter Name\"\n          />\n          <p class=\"help-block\">String. If you want to use an existing IONOS Datacenter to host this VM, you can change the name here. Please note that if the ID is set it will the prioritized.</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model:value=\"lanId\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"LAN ID\"\n          />\n          <p class=\"help-block\">Optional, integer. The LAN the VM will attach to. If blank, a default LAN will be created. Overrides \"Private LAN\" setting.</p>\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model:value=\"lanName\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"LAN Name\"\n          />\n          <p class=\"help-block\">String. If you want to use an existing IONOS LAN, you can change the name here. Please note that if the ID is set it will the prioritized.</p>\n        </div>\n        <div class=\"col span-4\">\n          <Checkbox\n            label=\"Make Default LAN Private\"\n            v-model:value=\"privateLan\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n          />\n          <p class=\"help-block\">If the default LAN does not exist, create a private LAN</p>\n        </div>\n      </div>\n      <div class=\"row mt-10\">\n        <div class=\"col span-4\">\n          <StringList\n            label=\"Additional LANs\"\n            v-model:value=\"additionalLans\"\n            :items=\"additionalLans\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            @change=\"onChangeAdditionalLans($event)\"\n          />\n          <p class=\"help-block\">Optional. Exiting Ionos LAN names. Every LAN in the datacenter which has its name in this list will be connected to the server, names which are not found will be ignored.</p>\n        </div>\n      </div>\n      <div class=\"row mt-10\">\n        <div class=\"col span-4\">\n          <Checkbox\n            label=\"NIC DHCP\"\n            v-model:value=\"nicDhcp\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n          />\n          <p class=\"help-block\">Set whether the created NIC should have dhcp set on or off</p>\n        </div>\n        <div class=\"col span-4\">\n          <StringList\n            label=\"NIC Ips\"\n            v-model:value=\"nicIps\"\n            :items=\"nicIps\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            @change=\"onChangeNicIps($event)\"\n          />\n          <p class=\"help-block\">Optional. IPBlock reserved IPs. If not set, the driver will reserve an IPBlock automatically or let the API set a private IP if the LAN is private</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-4\">\n          <Checkbox\n            label=\"Wait for NIC IP change\"\n            v-model:value=\"waitForIpChange\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n          />\n          <p class=\"help-block\">Should the driver wait for the NIC IP to be set by external sources?</p>\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model:value=\"waitForIpChangeTimeout\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"Wait for IP change timeout\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model:value=\"natId\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"IONOS Nat Gateway ID\"\n          />\n          <p class=\"help-block\">Optional, UUID-4 format. Use a preconfigured NAT Gateway. Datacenter ID and Private LAN required. Overrides NAT Config below</p>\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model:value=\"natName\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            label=\"IONOS Nat Gateway Name\"\n          />\n          <p class=\"help-block\">String. If the \"Create NAT\" checkbox is checked, will try creating a NAT with this name. If one already exists, will use the existing NAT.</p>\n        </div>\n        <div class=\"col span-4\">\n          <Checkbox\n            label=\"Create a configurable NAT\"\n            v-model:value=\"createNat\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n          />\n          <p class=\"help-block\">Requires private LAN. You can override settings of this NAT using the form below <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">See open ports here</a>. Must set gateway IP as default route via cloud config, default: 10.0.0.1</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\" v-if=\"createNat === true\">\n        <div class=\"col span-4\">\n          <StringList\n            label=\"Custom NAT: map LANs to Gateway IPs\"\n            v-model:value=\"natLansToGateways\"\n            :items=\"natLansToGateways\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            @change=\"onChangeNatLansToGateways($event)\"\n          />\n          <p class=\"help-block\">Optional. Maps Lan IDs to a specific Gateway IP. Gateway IP must be set manually as default route.</p>\n        </div>\n        <div class=\"col span-4\">\n          <StringList\n            label=\"Custom NAT: Public IPs\"\n            v-model:value=\"natPublicIps\"\n            :items=\"natPublicIps\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            @change=\"onChangeNatPublicIps($event)\"\n          />\n          <p class=\"help-block\">Optional. IPBlock reserved IPs. If not set, the driver will reserve an IPBlock automatically</p>\n        </div>\n        <div class=\"col span-4\">\n          <StringList\n            label=\"Custom NAT: Flowlogs\"\n            v-model:value=\"natFlowlogs\"\n            :items=\"natFlowlogs\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            @change=\"onChangeNatFlowlogs($event)\"\n          />\n          <p class=\"help-block\">Optional. NAT Flowlogs.</p>\n        </div>\n      </div>\n\n      <div class=\"row mt-10\" v-if=\"createNat === true\">\n        <div class=\"col span-6\">\n          <StringList\n            label=\"Custom NAT: Rules\"\n            v-model:value=\"natRules\"\n            :items=\"natRules\"\n            :mode=\"mode\"\n            :disabled=\"busy\"\n            @change=\"onChangeNatRules($event)\"\n          />\n          <p class=\"help-block\">Optional. NAT Rules. Use the form bellow to add a new NAT rule</p>\n        </div>\n      </div>\n      <div class=\"card-container create-nat\" v-if=\"createNat\">\n        <div class=\"row mt-10\">\n          <div class=\"col span-3\">\n            <LabeledInput\n              v-model:value=\"natRuleName\"\n              :mode=\"mode\"\n              :disabled=\"busy\"\n              label=\"IONOS Nat Gateway Rule Name\"\n            />\n            <p class=\"help-block\">String. The name of the new Nat Gateway Rule.</p>\n          </div>\n          <div class=\"col span-3\">\n              <LabeledInput\n                v-model:value=\"natRuleType\"\n                :mode=\"mode\"\n                :disabled=\"busy\"\n                label=\"IONOS Nat Gateway Rule Type\"\n              />\n            <p class=\"help-block\">String. The type of the new Nat Gateway Rule.</p>\n          </div>\n          <div class=\"col span-3\">\n            <LabeledSelect\n              v-model:value=\"natRuleProtocol.selected\"\n              label=\"natRuleProtocol\"\n              :options=\"natRuleProtocol.options\"\n              :loading=\"natRuleProtocol.busy\"\n              :searchable=\"false\"\n            />\n          </div>\n          <div class=\"col span-3\">\n            <LabeledInput\n              v-model:value=\"natRulePublicIp\"\n              :mode=\"mode\"\n              :disabled=\"busy\"\n              label=\"IONOS Nat Gateway Rule Public IP\"\n            />\n            <p class=\"help-block\">String. The Public IP of the new Nat Gateway Rule, leave black and the driver will use the nat gateway IP.</p>\n          </div>\n        </div>\n        <div class=\"row mt-10\">\n          <div class=\"col span-3\">\n            <LabeledInput\n              v-model:value=\"natRuleSourceSubnet\"\n              :mode=\"mode\"\n              :disabled=\"busy\"\n              label=\"IONOS Nat Gateway Rule Source Subnet\"\n            />\n            <p class=\"help-block\">String. The Source Subnet of the new Nat Gateway Rule, leave black and the driver will use the first ip on the nic with mask 24.</p>\n          </div>\n          <div class=\"col span-3\">\n            <LabeledInput\n              v-model:value=\"natRuleTargetSubnet\"\n              :mode=\"mode\"\n              :disabled=\"busy\"\n              label=\"IONOS Nat Gateway Rule Target Subnet\"\n            />\n            <p class=\"help-block\">String. The Target Subnet of the new Nat Gateway Rule.</p>\n          </div>\n          <div class=\"col span-3\">\n            <LabeledInput\n              v-model:value=\"natRuleTargetPortRangeStart\"\n              :mode=\"mode\"\n              :disabled=\"busy\"\n              label=\"IONOS Nat Gateway Rule Port Range Start\"\n            />\n            <p class=\"help-block\">Integer. The Port Range Start of the new Nat Gateway Rule.</p>\n          </div>\n          <div class=\"col span-3\">\n            <LabeledInput\n              v-model:value=\"natRuleTargetPortRangeEnd\"\n              :mode=\"mode\"\n              :disabled=\"busy\"\n              label=\"IONOS Nat Gateway Rule Port Range End\"\n            />\n            <p class=\"help-block\">Integer. The Port Range End of the new Nat Gateway Rule.</p>\n          </div>\n        </div>\n        <div class=\"mt-10\">\n          <button @click=\"addNatRule()\">\n            Add NAT Gateway Rule +\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<style scoped lang=\"scss\">\n  .help-block {\n    margin-top: .5em;\n    font-size: .8em;\n    margin-left: 1em;\n  }\n\n  .create-nat {\n    flex-direction: column;\n  }\n\n  .ionoscloud-config {\n    display: flex;\n    align-items: center;\n\n    > .title {\n      font-weight: bold;\n      padding: 4px 0;\n    }\n\n    > .loading {\n      margin-left: 20px;\n      display: flex;\n      align-items: center;\n\n      > i {\n        margin-right: 4px;;\n      }\n    }\n  }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ionoscloud.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ionoscloud.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ionoscloud.vue?vue&type=template&id=3af1f63b&scoped=true\"\nimport script from \"./ionoscloud.vue?vue&type=script&lang=js\"\nexport * from \"./ionoscloud.vue?vue&type=script&lang=js\"\nimport style0 from \"./ionoscloud.vue?vue&type=style&index=0&id=3af1f63b&prod&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3af1f63b\",\n  null\n  \n)\n\nexport default component.exports","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-3!../../../node_modules/sass-loader/dist/cjs.js??ref--10-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ionoscloud.vue?vue&type=style&index=0&id=3af1f63b&prod&scoped=true&lang=scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"e511ce1e\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","export * from \"-!../../../node_modules/vue-style-loader/index.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-3!../../../node_modules/sass-loader/dist/cjs.js??ref--10-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ionoscloud.vue?vue&type=style&index=0&id=3af1f63b&prod&scoped=true&lang=scss\"","var map = {\n\t\"./csp/metadata.json\": \"7f57\",\n\t\"./federal/metadata.json\": \"66fa\",\n\t\"./rgs/metadata.json\": \"45d2\",\n\t\"./suse/metadata.json\": \"1d5f\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"dad7\";"],"sourceRoot":""}